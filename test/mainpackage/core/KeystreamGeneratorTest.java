package mainpackage.core;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.Arrays;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author almutasemalsayed
 */
public class KeystreamGeneratorTest {

   @Test
   public void testgenerateKeystream1() throws Exception {
      System.out.println("testgenerateKeystream1");
      String imageName = "4X4.png";

      int keySize = 128;
      int numOfThreads = 3;
      int numberOfKeys = 1;
      byte[] keyStream = getImageVectorForImageName(imageName);
      byte[] expectedKey = {-35, -125, 44, -86, -106, 14, 32, 28, 119, 16, -50, 125, 124, -119, 56, -88};

      byte[] results = KeystreamGenerator.generateKeystream(keyStream, keySize, numberOfKeys, numOfThreads);
      assertTrue(results.length == expectedKey.length);
      assertTrue("Expected: " + Arrays.toString(expectedKey) + "\nFound:   " + Arrays.toString(results), Arrays.equals(expectedKey, results));
   }

   @Test
   public void testgenerateKeystream2() throws Exception {
      System.out.println("testgenerateKeystream2");
      String imageName = "395X455.jpeg";

      int keySize = 128;
      int numOfThreads = 3;

      int numberOfKeys = 1;

      byte[] keyStream = getImageVectorForImageName(imageName);
      byte[] expectedKey = {85, 111, -5, 74, -66, -18, -127, -35, -18, 74, -78, -45, 61, -94, -87, -65};

      byte[] results = KeystreamGenerator.generateKeystream(keyStream, keySize, numberOfKeys, numOfThreads);
      assertTrue(results.length == expectedKey.length);
      assertTrue("Expected: " + Arrays.toString(expectedKey) + "\nFound:   " + Arrays.toString(results), Arrays.equals(expectedKey, results));
   }

   @Test
   public void testgenerateKeystream3() throws Exception {
      System.out.println("testgenerateKeystream3");
      String imageName = "395X455.jpeg";

      int keySize = 128;
      int numOfThreads = 100;

      int numberOfKeys = 1;
      byte[] keyStream = getImageVectorForImageName(imageName);
      byte[] expectedKey = {85, 111, -5, 74, -66, -18, -127, -35, -18, 74, -78, -45, 61, -94, -87, -65};

      byte[] results = KeystreamGenerator.generateKeystream(keyStream, keySize, numberOfKeys, numOfThreads);
      assertTrue(results.length == expectedKey.length);
      assertTrue("Expected: " + Arrays.toString(expectedKey) + "\nFound:   " + Arrays.toString(results), Arrays.equals(expectedKey, results));
   }

   @Test
   public void testgenerateKeystream4() throws Exception {
      System.out.println("testgenerateKeystream4");
      String imageName = "395X455.jpeg";
      int keySize = 256;
      int numOfThreads = 3;

      int numberOfKeys = 1;

      byte[] keyStream = getImageVectorForImageName(imageName);
      byte[] expectedKey = {-32, -91, -95, -74, -75, -31, 41, 69, 120, -121, 29, -57, -114, -95, 2, -36, -118, 10, -28, -89, 65, -122, -66, 38, -80, -62, -10, 40, -115, -12, -93, 65};

      byte[] results = KeystreamGenerator.generateKeystream(keyStream, keySize, numberOfKeys, numOfThreads);
      assertTrue(results.length == expectedKey.length);
      assertTrue("Expected: " + Arrays.toString(expectedKey) + "\nFound:   " + Arrays.toString(results), Arrays.equals(expectedKey, results));
   }

   @Test
   public void testgenerateKeystream5() throws Exception {
      System.out.println("testgenerateKeystream5");
      byte[][] keys = new byte[128][];
      keys[0] = new byte[]{-35, -125, 44, -86, -106, 14, 32, 28, 119, 16, -50, 125, 124, -119, 56, -88};
      keys[1] = new byte[]{54, 59, 8, 81, 109, 108, -61, 25, -52, 87, 5, 38, -26, -63, 98, 89};
      keys[2] = new byte[]{-117, 111, 59, -94, 38, -26, -87, 116, -2, 63, 43, 27, -103, -59, -29, -86};
      keys[3] = new byte[]{-108, 83, -53, 104, -63, -36, 121, 111, 67, 61, 17, -16, -34, 44, -66, 30};
      keys[4] = new byte[]{-30, 84, -126, 120, 95, 72, -104, -126, 124, 11, -73, 113, 4, 70, -66, -104};
      keys[5] = new byte[]{-47, -25, -101, -40, 118, 69, 73, 59, 116, -15, -9, -71, 23, 98, 33, 114};
      keys[6] = new byte[]{6, -81, -44, -109, -86, 72, 29, 111, -32, 127, -97, -77, 108, -100, 15, 114};
      keys[7] = new byte[]{102, -82, -60, 102, -109, -127, 74, 32, 55, 83, -30, -102, -113, 23, -65, -124};
      keys[8] = new byte[]{43, -39, -21, 88, -37, -115, 63, 21, 69, 65, -41, 124, 108, 46, 28, -2};
      keys[9] = new byte[]{-87, 81, -1, 54, -33, 77, -77, -36, -58, -26, -3, 50, -69, -125, 24, 62};
      keys[10] = new byte[]{124, -73, 12, -70, -64, 20, -124, -113, -34, -61, 37, 25, 59, 41, 45, 47};
      keys[11] = new byte[]{33, 127, 9, 35, 56, 119, -118, 26, -86, 60, -74, 19, -58, 91, 21, 52};
      keys[12] = new byte[]{65, -109, 10, -69, 48, 45, -78, 125, 73, -108, -16, -96, -75, 78, -64, -41};
      keys[13] = new byte[]{-96, -116, -15, -76, -83, 25, -79, 67, -71, -105, -9, -11, -39, -57, -119, 69};
      keys[14] = new byte[]{-20, -93, -37, 76, 103, 43, 22, -28, -102, 23, 22, -12, 84, 51, 66, -109};
      keys[15] = new byte[]{-30, 116, 124, 35, 117, 109, 16, 27, 124, -49, -33, -33, 23, 119, 48, 111};
      keys[16] = new byte[]{-59, -61, 17, 10, -122, 76, -114, -46, 50, 77, 70, -97, -88, 91, -107, -102};
      keys[17] = new byte[]{-123, 70, -70, 116, -53, -45, 28, 19, -14, -33, -115, 35, 82, -48, -103, 68};
      keys[18] = new byte[]{86, -86, -4, -39, -38, -95, 117, 45, 6, -126, 102, 96, 57, -62, -16, 124};
      keys[19] = new byte[]{106, -72, 123, 39, -84, -117, 122, 97, 80, -70, 74, 72, -26, -45, 96, 22};
      keys[20] = new byte[]{21, 119, 50, 77, 107, -88, 104, 124, 51, 113, -29, -50, -114, 100, -11, 80};
      keys[21] = new byte[]{-74, 3, -111, 123, -10, 73, -45, 50, -44, 23, 49, 74, -90, -62, 33, -100};
      keys[22] = new byte[]{-28, 52, -99, -80, 105, 105, -41, 34, -119, -84, -79, 68, 104, -65, 54, 123};
      keys[23] = new byte[]{14, 57, 40, -77, -121, 18, -11, 122, 46, -59, -10, -60, 90, 4, -63, -85};
      keys[24] = new byte[]{10, -64, 31, 78, -63, 21, -105, -78, -19, 48, 84, -62, 89, 17, 39, 53};
      keys[25] = new byte[]{-34, 113, -39, 53, 85, 19, -69, -56, 21, 77, -51, -97, -102, 111, -64, -115};
      keys[26] = new byte[]{-73, 87, 121, 11, -63, -107, -90, 100, 101, 45, 101, -51, 3, 51, 61, 114};
      keys[27] = new byte[]{-86, 98, -113, 81, -107, -21, 100, 17, -36, -37, 10, 119, -79, -82, -63, -98};
      keys[28] = new byte[]{5, -123, 70, -128, -39, 88, 104, 91, 73, -15, 123, -115, 111, -102, -118, 119};
      keys[29] = new byte[]{-13, -49, 121, 18, 57, -59, 52, -50, 93, 15, -112, 62, 117, 90, 65, -14};
      keys[30] = new byte[]{100, -88, 29, -5, -11, 22, 45, 76, -81, -78, -61, -43, -2, -73, 99, -112};
      keys[31] = new byte[]{125, 19, -60, -106, -64, -73, -118, 127, -43, 10, 33, -109, -27, -56, 114, -82};
      keys[32] = new byte[]{-2, -2, 99, 76, -56, 114, 58, -117, -35, 80, -21, 78, -73, 107, -69, -51};
      keys[33] = new byte[]{-13, -65, -91, 23, 20, 66, 49, 33, -62, -87, -118, -21, 119, -77, -99, 37};
      keys[34] = new byte[]{-78, -77, -19, 57, -120, 88, -6, -5, -111, 39, -118, 3, 30, 93, -59, 105};
      keys[35] = new byte[]{78, -58, 121, -25, 112, -76, 113, 82, 52, -50, -25, 106, -83, -105, 80, 51};
      keys[36] = new byte[]{71, -105, -116, -119, -76, -51, -97, 5, 108, 8, -15, 94, -26, -110, -18, -21};
      keys[37] = new byte[]{68, 62, 56, -92, 82, -47, -44, 92, -50, -100, 25, 91, -111, -37, -50, 59};
      keys[38] = new byte[]{-7, 47, -126, -36, -103, 119, 14, -60, -34, -7, 0, -77, 2, -70, 56, -120};
      keys[39] = new byte[]{-13, -116, 91, -105, 88, -95, -124, -92, -65, -86, -31, 35, -73, 17, -91, -5};
      keys[40] = new byte[]{-26, 49, 7, 115, 102, -92, -82, 77, 42, 60, -122, 86, -128, 122, -49, 92};
      keys[41] = new byte[]{84, 121, -118, 15, -46, -126, 72, 3, -73, -80, 1, 100, 97, 29, 51, -28};
      keys[42] = new byte[]{-73, 37, 50, 8, -127, 94, -58, -128, 17, 90, 38, -120, 84, -37, -115, -31};
      keys[43] = new byte[]{53, -48, -4, -23, -115, -117, -47, -123, -28, -46, 47, -38, 27, -63, -73, 1};
      keys[44] = new byte[]{-99, -68, 33, -87, -112, 57, 125, 107, 126, 107, 95, 11, -50, -48, -27, 100};
      keys[45] = new byte[]{-32, -4, 9, 87, 3, -85, -91, -38, -85, -124, -6, 26, 22, -126, 85, 8};
      keys[46] = new byte[]{46, -13, 22, -23, -55, -2, 57, -98, 9, -119, -88, -124, 113, 118, 101, 37};
      keys[47] = new byte[]{-46, 35, 50, 79, 122, -41, 25, -57, 31, 108, 91, 53, -28, 61, 10, 23};
      keys[48] = new byte[]{34, 39, -123, -117, 82, -29, -93, -15, 113, 126, -21, -3, -34, -89, 93, 126};
      keys[49] = new byte[]{33, 126, -87, 8, 27, 32, -24, -86, 15, -32, -57, -118, 125, 54, 120, -4};
      keys[50] = new byte[]{25, 121, -77, -28, -87, 18, -56, 50, -59, -25, 106, 100, 84, -63, -70, -97};
      keys[51] = new byte[]{114, -65, 95, 110, -107, 90, 88, 49, 98, -39, -69, -111, 119, 90, -124, 69};
      keys[52] = new byte[]{71, 22, -124, -35, -30, 73, -52, 3, -47, -98, 23, 10, -17, 110, 89, 67};
      keys[53] = new byte[]{106, -18, -5, 25, 87, 40, -83, 55, 65, 71, -27, 74, 79, 80, -59, 55};
      keys[54] = new byte[]{-93, 77, -95, 103, -26, 45, 74, -39, 119, 29, 12, 90, 107, -21, 16, -31};
      keys[55] = new byte[]{95, -19, -10, 37, 2, 35, 88, 26, 99, -52, 30, -36, -42, -22, 70, 43};
      keys[56] = new byte[]{62, -87, -51, -66, 70, 81, -59, 77, -122, -117, 20, 38, 31, 34, -76, -37};
      keys[57] = new byte[]{-7, 22, -49, 127, 76, -120, 89, 127, 88, 111, -107, -42, 81, -98, -38, 104};
      keys[58] = new byte[]{36, 119, 32, 51, 55, 7, 77, 119, 28, -57, 101, 19, -42, -94, -26, -3};
      keys[59] = new byte[]{84, 120, -77, 53, -14, -34, 126, -2, 99, 10, -101, 57, 116, -45, 98, 91};
      keys[60] = new byte[]{52, 81, 86, 54, 127, 71, -41, 76, -95, 43, 51, 21, -117, -20, 60, 98};
      keys[61] = new byte[]{94, 23, -84, 88, -72, -112, -34, 29, -47, 73, -86, 79, 73, 33, 121, 80};
      keys[62] = new byte[]{87, -26, 110, -33, 63, -91, -35, -90, 126, -93, -29, -118, -89, -10, 109, -56};
      keys[63] = new byte[]{122, 58, -108, -93, 39, 113, 79, 122, -102, -72, -63, 10, -18, -117, -123, 58};
      keys[64] = new byte[]{-14, -50, 105, 54, -32, -116, 45, -124, 22, 58, 38, -83, 16, -118, -6, 111};
      keys[65] = new byte[]{0, 11, 126, 9, 1, 25, -91, 25, 105, 125, -65, 107, 25, -39, 127, 57};
      keys[66] = new byte[]{67, 17, 43, 29, -91, 38, 74, -57, 7, 13, -13, -46, 6, -104, -12, 124};
      keys[67] = new byte[]{-17, 91, 15, 39, 63, 14, 89, -2, -92, -62, 41, 57, -93, 98, -109, 50};
      keys[68] = new byte[]{100, -88, -47, 11, -42, 93, -106, 105, -104, 5, 13, -29, 74, -28, -15, 6};
      keys[69] = new byte[]{-87, -97, 4, 46, 88, 69, -92, 67, 8, -27, -118, -3, -81, 20, 19, -109};
      keys[70] = new byte[]{-20, 44, 96, 125, 83, -85, -7, 55, -105, -103, -124, 98, -14, 95, -86, 85};
      keys[71] = new byte[]{-117, -59, 73, -19, 95, -125, -122, 108, 119, -86, -23, -125, 67, -101, 122, -77};
      keys[72] = new byte[]{32, 111, -118, 35, -80, 102, -89, 42, -8, 126, 90, -26, 72, -58, -48, -47};
      keys[73] = new byte[]{126, 111, -80, -22, 21, 126, 12, -83, 123, -121, -22, -29, -15, -89, 9, 56};
      keys[74] = new byte[]{68, 75, -44, -16, 13, 77, -120, 70, -75, -105, -43, -34, 74, 59, 99, 109};
      keys[75] = new byte[]{-41, -105, -59, 102, 8, 27, -95, 61, 88, -59, -33, -127, -114, -120, 2, 110};
      keys[76] = new byte[]{50, -93, -118, 104, -86, 37, -49, -36, 78, 99, -109, -53, 48, -81, -84, -45};
      keys[77] = new byte[]{93, -10, -95, 61, 74, 96, 80, 109, -98, 42, -93, 119, -28, -101, 53, -112};
      keys[78] = new byte[]{-2, -25, -54, -77, 23, -30, -88, -108, 41, 71, 82, -70, 77, 49, 98, -116};
      keys[79] = new byte[]{66, 70, -43, 95, 107, -98, -119, -117, 76, 51, 54, -67, -43, 64, 77, 110};
      keys[80] = new byte[]{110, 63, 26, 99, 64, 27, 13, 68, 96, 1, -1, 98, 67, -92, -42, 40};
      keys[81] = new byte[]{-39, 69, 92, 3, -45, 15, -75, -95, 19, 1, -26, 18, -99, -89, 58, -99};
      keys[82] = new byte[]{97, 98, -6, -64, 16, 80, -84, 70, 25, 51, 76, -79, 123, 2, -41, -99};
      keys[83] = new byte[]{102, 52, 22, -96, -105, -74, -121, -115, -34, -13, 51, 78, -80, -37, -47, 43};
      keys[84] = new byte[]{-79, 120, -74, -24, -17, -70, 71, 104, 68, 6, 55, 5, 122, 91, -13, -64};
      keys[85] = new byte[]{-76, 38, -55, -121, -92, 108, 69, -106, -103, -62, 46, -111, 97, 50, 37, -81};
      keys[86] = new byte[]{-11, -13, -80, 91, 117, 65, 1, -106, 56, 50, 6, 57, -117, 31, -48, -119};
      keys[87] = new byte[]{65, -107, -70, 101, -86, -5, -9, 86, 51, 44, -121, 28, -121, -56, -55, 75};
      keys[88] = new byte[]{95, 80, 66, -26, 98, -13, -44, 78, 84, 67, -43, 4, 108, -114, -25, -64};
      keys[89] = new byte[]{73, -44, -15, 38, -81, 3, -31, -8, -41, -6, 28, 28, 95, -7, -14, -48};
      keys[90] = new byte[]{4, 0, -39, -39, 88, 39, -74, 102, -104, -36, 90, -34, 117, -98, 79, 122};
      keys[91] = new byte[]{-54, 109, 87, 75, -91, 35, 123, -44, 52, 41, 74, -62, -10, -87, 7, 5};
      keys[92] = new byte[]{-56, 124, 20, 97, 9, -122, 99, 56, -46, -45, 98, -104, -15, 72, 67, -56};
      keys[93] = new byte[]{76, -32, 105, 114, -116, -39, -95, -77, 49, -29, -2, -47, -35, 72, 94, -125};
      keys[94] = new byte[]{70, 56, 39, -26, -9, 98, 60, 1, 12, 47, 68, 35, 119, -123, -119, -116};
      keys[95] = new byte[]{51, -50, -29, 65, 46, -11, -82, -3, -103, -116, 93, 111, -82, 24, 32, 40};
      keys[96] = new byte[]{34, -50, 1, -63, 7, 13, 19, -68, 111, 21, -4, 73, 23, 91, 64, 25};
      keys[97] = new byte[]{90, -27, -124, 34, -88, 69, 125, -38, -28, 76, -96, 79, 107, -19, -83, -28};
      keys[98] = new byte[]{-91, 19, -1, -67, -107, 125, 23, -76, -6, -60, -102, 83, 0, -36, -112, -116};
      keys[99] = new byte[]{90, -13, 49, 90, 127, -121, 119, -1, -71, 102, -1, 43, -49, -105, 53, 60};
      keys[100] = new byte[]{-49, 44, 68, 31, 58, -94, -85, -39, -93, 45, -83, 101, 8, -100, -48, -67};
      keys[101] = new byte[]{111, -102, -20, 94, 51, -13, 41, -44, -17, -98, -121, 114, -97, 11, -74, 121};
      keys[102] = new byte[]{61, 42, 0, 17, -77, -44, 64, 12, 105, 38, 80, 1, -103, 115, 40, 23};
      keys[103] = new byte[]{123, 49, 103, 11, -25, 51, -58, -82, -96, 95, -15, 90, -73, -51, -117, -80};
      keys[104] = new byte[]{-114, 106, -120, 12, 110, -55, -67, -94, -80, 50, 74, -113, -122, -6, -30, -68};
      keys[105] = new byte[]{-107, 57, 35, -14, -103, 110, 88, -72, -2, 113, -33, 107, -31, -12, 73, -90};
      keys[106] = new byte[]{23, -75, 119, 39, 97, 79, -3, 111, 20, -32, -36, -65, -113, -75, 1, 58};
      keys[107] = new byte[]{9, 96, 89, -4, -127, 113, 110, -28, -82, 45, -109, -34, 98, 54, -93, -89};
      keys[108] = new byte[]{58, 21, -9, -61, -14, 125, -52, -30, 68, 90, 63, 59, 3, 112, 28, -57};
      keys[109] = new byte[]{-34, 80, 32, 8, -114, 1, -66, -24, -105, -86, -124, 37, -6, -68, 41, 0};
      keys[110] = new byte[]{-49, -56, 43, -44, 117, 4, -18, -50, 81, -25, -100, 79, 96, 109, 74, -58};
      keys[111] = new byte[]{110, 106, 95, -100, 116, -60, 126, -55, -99, 96, 23, -106, 105, 92, 97, 51};
      keys[112] = new byte[]{-86, -106, 117, 82, -110, -37, 90, 70, 41, -86, -4, -18, 53, 86, 43, 19};
      keys[113] = new byte[]{-49, 99, 18, -112, 37, 54, 110, 82, -15, -28, -78, 85, -110, 55, -128, 44};
      keys[114] = new byte[]{65, 77, 82, 3, -65, 29, -124, 8, 18, 120, -16, 30, -42, 47, 57, 52};
      keys[115] = new byte[]{37, 73, 55, 102, 73, 10, -45, -33, 54, -40, 107, -100, -90, 74, -38, -113};
      keys[116] = new byte[]{-3, -44, 123, -25, 6, -73, 2, 113, 42, -38, 91, 106, -69, -10, -49, 65};
      keys[117] = new byte[]{-64, -44, 106, 94, -89, 91, -13, 7, -21, -17, -63, 114, -9, 57, 76, -89};
      keys[118] = new byte[]{-114, 119, 48, -57, 115, -41, -89, -43, 1, 92, 46, 38, 91, 72, -112, -61};
      keys[119] = new byte[]{93, -59, 106, 25, 9, 61, 97, 84, -77, -50, 56, -50, 61, 82, -39, -28};
      keys[120] = new byte[]{101, 38, 108, -35, 95, -121, -29, 44, 114, 49, 107, -59, 105, -95, 25, 5};
      keys[121] = new byte[]{44, -24, 33, -33, -26, 29, 41, 19, -118, 14, 51, -59, -101, 5, -102, -45};
      keys[122] = new byte[]{15, -69, 4, 98, 94, -119, 56, -9, 72, -51, -76, -80, 14, -119, 113, -25};
      keys[123] = new byte[]{68, 118, 37, 91, -2, -81, -112, 30, 72, -117, -31, -74, -86, 110, 123, 88};
      keys[124] = new byte[]{-65, 80, 26, -12, 13, 24, -50, 45, 2, -9, 1, -38, -74, 27, -103, 10};
      keys[125] = new byte[]{92, 21, -112, -49, -48, 102, -98, -115, -85, 88, 24, -13, -40, -70, -119, -15};
      keys[126] = new byte[]{-25, -65, 20, 125, -90, 69, 87, 78, 46, -91, -23, 46, 53, -46, 74, 2};
      keys[127] = new byte[]{115, -29, -12, 67, -80, -62, 13, 89, 34, -47, -24, 89, -46, -34, 70, -35};

      byte[] expectedKeys = flatten(keys);
      byte[] imageVector = new byte[]{41, 2, 0, 0, 8, 2, 2, -128, 0, 10, 41, 0, 9, 45, 0, 50};
      int keySize = 128;
      int numberOfKeys = 128;
      int numberOfThreads = 1;

      byte[] resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 2;
      resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 3;
      resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 33;
      resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));
   }

   @Test
   public void testgenerateKeystream6() throws Exception {
      System.out.println("testgenerateKeystream6");
      byte[][] keys = new byte[129][];
      keys[0] = new byte[]{-35, -125, 44, -86, -106, 14, 32, 28, 119, 16, -50, 125, 124, -119, 56, -88};
      keys[1] = new byte[]{54, 59, 8, 81, 109, 108, -61, 25, -52, 87, 5, 38, -26, -63, 98, 89};
      keys[2] = new byte[]{-117, 111, 59, -94, 38, -26, -87, 116, -2, 63, 43, 27, -103, -59, -29, -86};
      keys[3] = new byte[]{-108, 83, -53, 104, -63, -36, 121, 111, 67, 61, 17, -16, -34, 44, -66, 30};
      keys[4] = new byte[]{-30, 84, -126, 120, 95, 72, -104, -126, 124, 11, -73, 113, 4, 70, -66, -104};
      keys[5] = new byte[]{-47, -25, -101, -40, 118, 69, 73, 59, 116, -15, -9, -71, 23, 98, 33, 114};
      keys[6] = new byte[]{6, -81, -44, -109, -86, 72, 29, 111, -32, 127, -97, -77, 108, -100, 15, 114};
      keys[7] = new byte[]{102, -82, -60, 102, -109, -127, 74, 32, 55, 83, -30, -102, -113, 23, -65, -124};
      keys[8] = new byte[]{43, -39, -21, 88, -37, -115, 63, 21, 69, 65, -41, 124, 108, 46, 28, -2};
      keys[9] = new byte[]{-87, 81, -1, 54, -33, 77, -77, -36, -58, -26, -3, 50, -69, -125, 24, 62};
      keys[10] = new byte[]{124, -73, 12, -70, -64, 20, -124, -113, -34, -61, 37, 25, 59, 41, 45, 47};
      keys[11] = new byte[]{33, 127, 9, 35, 56, 119, -118, 26, -86, 60, -74, 19, -58, 91, 21, 52};
      keys[12] = new byte[]{65, -109, 10, -69, 48, 45, -78, 125, 73, -108, -16, -96, -75, 78, -64, -41};
      keys[13] = new byte[]{-96, -116, -15, -76, -83, 25, -79, 67, -71, -105, -9, -11, -39, -57, -119, 69};
      keys[14] = new byte[]{-20, -93, -37, 76, 103, 43, 22, -28, -102, 23, 22, -12, 84, 51, 66, -109};
      keys[15] = new byte[]{-30, 116, 124, 35, 117, 109, 16, 27, 124, -49, -33, -33, 23, 119, 48, 111};
      keys[16] = new byte[]{-59, -61, 17, 10, -122, 76, -114, -46, 50, 77, 70, -97, -88, 91, -107, -102};
      keys[17] = new byte[]{-123, 70, -70, 116, -53, -45, 28, 19, -14, -33, -115, 35, 82, -48, -103, 68};
      keys[18] = new byte[]{86, -86, -4, -39, -38, -95, 117, 45, 6, -126, 102, 96, 57, -62, -16, 124};
      keys[19] = new byte[]{106, -72, 123, 39, -84, -117, 122, 97, 80, -70, 74, 72, -26, -45, 96, 22};
      keys[20] = new byte[]{21, 119, 50, 77, 107, -88, 104, 124, 51, 113, -29, -50, -114, 100, -11, 80};
      keys[21] = new byte[]{-74, 3, -111, 123, -10, 73, -45, 50, -44, 23, 49, 74, -90, -62, 33, -100};
      keys[22] = new byte[]{-28, 52, -99, -80, 105, 105, -41, 34, -119, -84, -79, 68, 104, -65, 54, 123};
      keys[23] = new byte[]{14, 57, 40, -77, -121, 18, -11, 122, 46, -59, -10, -60, 90, 4, -63, -85};
      keys[24] = new byte[]{10, -64, 31, 78, -63, 21, -105, -78, -19, 48, 84, -62, 89, 17, 39, 53};
      keys[25] = new byte[]{-34, 113, -39, 53, 85, 19, -69, -56, 21, 77, -51, -97, -102, 111, -64, -115};
      keys[26] = new byte[]{-73, 87, 121, 11, -63, -107, -90, 100, 101, 45, 101, -51, 3, 51, 61, 114};
      keys[27] = new byte[]{-86, 98, -113, 81, -107, -21, 100, 17, -36, -37, 10, 119, -79, -82, -63, -98};
      keys[28] = new byte[]{5, -123, 70, -128, -39, 88, 104, 91, 73, -15, 123, -115, 111, -102, -118, 119};
      keys[29] = new byte[]{-13, -49, 121, 18, 57, -59, 52, -50, 93, 15, -112, 62, 117, 90, 65, -14};
      keys[30] = new byte[]{100, -88, 29, -5, -11, 22, 45, 76, -81, -78, -61, -43, -2, -73, 99, -112};
      keys[31] = new byte[]{125, 19, -60, -106, -64, -73, -118, 127, -43, 10, 33, -109, -27, -56, 114, -82};
      keys[32] = new byte[]{-2, -2, 99, 76, -56, 114, 58, -117, -35, 80, -21, 78, -73, 107, -69, -51};
      keys[33] = new byte[]{-13, -65, -91, 23, 20, 66, 49, 33, -62, -87, -118, -21, 119, -77, -99, 37};
      keys[34] = new byte[]{-78, -77, -19, 57, -120, 88, -6, -5, -111, 39, -118, 3, 30, 93, -59, 105};
      keys[35] = new byte[]{78, -58, 121, -25, 112, -76, 113, 82, 52, -50, -25, 106, -83, -105, 80, 51};
      keys[36] = new byte[]{71, -105, -116, -119, -76, -51, -97, 5, 108, 8, -15, 94, -26, -110, -18, -21};
      keys[37] = new byte[]{68, 62, 56, -92, 82, -47, -44, 92, -50, -100, 25, 91, -111, -37, -50, 59};
      keys[38] = new byte[]{-7, 47, -126, -36, -103, 119, 14, -60, -34, -7, 0, -77, 2, -70, 56, -120};
      keys[39] = new byte[]{-13, -116, 91, -105, 88, -95, -124, -92, -65, -86, -31, 35, -73, 17, -91, -5};
      keys[40] = new byte[]{-26, 49, 7, 115, 102, -92, -82, 77, 42, 60, -122, 86, -128, 122, -49, 92};
      keys[41] = new byte[]{84, 121, -118, 15, -46, -126, 72, 3, -73, -80, 1, 100, 97, 29, 51, -28};
      keys[42] = new byte[]{-73, 37, 50, 8, -127, 94, -58, -128, 17, 90, 38, -120, 84, -37, -115, -31};
      keys[43] = new byte[]{53, -48, -4, -23, -115, -117, -47, -123, -28, -46, 47, -38, 27, -63, -73, 1};
      keys[44] = new byte[]{-99, -68, 33, -87, -112, 57, 125, 107, 126, 107, 95, 11, -50, -48, -27, 100};
      keys[45] = new byte[]{-32, -4, 9, 87, 3, -85, -91, -38, -85, -124, -6, 26, 22, -126, 85, 8};
      keys[46] = new byte[]{46, -13, 22, -23, -55, -2, 57, -98, 9, -119, -88, -124, 113, 118, 101, 37};
      keys[47] = new byte[]{-46, 35, 50, 79, 122, -41, 25, -57, 31, 108, 91, 53, -28, 61, 10, 23};
      keys[48] = new byte[]{34, 39, -123, -117, 82, -29, -93, -15, 113, 126, -21, -3, -34, -89, 93, 126};
      keys[49] = new byte[]{33, 126, -87, 8, 27, 32, -24, -86, 15, -32, -57, -118, 125, 54, 120, -4};
      keys[50] = new byte[]{25, 121, -77, -28, -87, 18, -56, 50, -59, -25, 106, 100, 84, -63, -70, -97};
      keys[51] = new byte[]{114, -65, 95, 110, -107, 90, 88, 49, 98, -39, -69, -111, 119, 90, -124, 69};
      keys[52] = new byte[]{71, 22, -124, -35, -30, 73, -52, 3, -47, -98, 23, 10, -17, 110, 89, 67};
      keys[53] = new byte[]{106, -18, -5, 25, 87, 40, -83, 55, 65, 71, -27, 74, 79, 80, -59, 55};
      keys[54] = new byte[]{-93, 77, -95, 103, -26, 45, 74, -39, 119, 29, 12, 90, 107, -21, 16, -31};
      keys[55] = new byte[]{95, -19, -10, 37, 2, 35, 88, 26, 99, -52, 30, -36, -42, -22, 70, 43};
      keys[56] = new byte[]{62, -87, -51, -66, 70, 81, -59, 77, -122, -117, 20, 38, 31, 34, -76, -37};
      keys[57] = new byte[]{-7, 22, -49, 127, 76, -120, 89, 127, 88, 111, -107, -42, 81, -98, -38, 104};
      keys[58] = new byte[]{36, 119, 32, 51, 55, 7, 77, 119, 28, -57, 101, 19, -42, -94, -26, -3};
      keys[59] = new byte[]{84, 120, -77, 53, -14, -34, 126, -2, 99, 10, -101, 57, 116, -45, 98, 91};
      keys[60] = new byte[]{52, 81, 86, 54, 127, 71, -41, 76, -95, 43, 51, 21, -117, -20, 60, 98};
      keys[61] = new byte[]{94, 23, -84, 88, -72, -112, -34, 29, -47, 73, -86, 79, 73, 33, 121, 80};
      keys[62] = new byte[]{87, -26, 110, -33, 63, -91, -35, -90, 126, -93, -29, -118, -89, -10, 109, -56};
      keys[63] = new byte[]{122, 58, -108, -93, 39, 113, 79, 122, -102, -72, -63, 10, -18, -117, -123, 58};
      keys[64] = new byte[]{-14, -50, 105, 54, -32, -116, 45, -124, 22, 58, 38, -83, 16, -118, -6, 111};
      keys[65] = new byte[]{0, 11, 126, 9, 1, 25, -91, 25, 105, 125, -65, 107, 25, -39, 127, 57};
      keys[66] = new byte[]{67, 17, 43, 29, -91, 38, 74, -57, 7, 13, -13, -46, 6, -104, -12, 124};
      keys[67] = new byte[]{-17, 91, 15, 39, 63, 14, 89, -2, -92, -62, 41, 57, -93, 98, -109, 50};
      keys[68] = new byte[]{100, -88, -47, 11, -42, 93, -106, 105, -104, 5, 13, -29, 74, -28, -15, 6};
      keys[69] = new byte[]{-87, -97, 4, 46, 88, 69, -92, 67, 8, -27, -118, -3, -81, 20, 19, -109};
      keys[70] = new byte[]{-20, 44, 96, 125, 83, -85, -7, 55, -105, -103, -124, 98, -14, 95, -86, 85};
      keys[71] = new byte[]{-117, -59, 73, -19, 95, -125, -122, 108, 119, -86, -23, -125, 67, -101, 122, -77};
      keys[72] = new byte[]{32, 111, -118, 35, -80, 102, -89, 42, -8, 126, 90, -26, 72, -58, -48, -47};
      keys[73] = new byte[]{126, 111, -80, -22, 21, 126, 12, -83, 123, -121, -22, -29, -15, -89, 9, 56};
      keys[74] = new byte[]{68, 75, -44, -16, 13, 77, -120, 70, -75, -105, -43, -34, 74, 59, 99, 109};
      keys[75] = new byte[]{-41, -105, -59, 102, 8, 27, -95, 61, 88, -59, -33, -127, -114, -120, 2, 110};
      keys[76] = new byte[]{50, -93, -118, 104, -86, 37, -49, -36, 78, 99, -109, -53, 48, -81, -84, -45};
      keys[77] = new byte[]{93, -10, -95, 61, 74, 96, 80, 109, -98, 42, -93, 119, -28, -101, 53, -112};
      keys[78] = new byte[]{-2, -25, -54, -77, 23, -30, -88, -108, 41, 71, 82, -70, 77, 49, 98, -116};
      keys[79] = new byte[]{66, 70, -43, 95, 107, -98, -119, -117, 76, 51, 54, -67, -43, 64, 77, 110};
      keys[80] = new byte[]{110, 63, 26, 99, 64, 27, 13, 68, 96, 1, -1, 98, 67, -92, -42, 40};
      keys[81] = new byte[]{-39, 69, 92, 3, -45, 15, -75, -95, 19, 1, -26, 18, -99, -89, 58, -99};
      keys[82] = new byte[]{97, 98, -6, -64, 16, 80, -84, 70, 25, 51, 76, -79, 123, 2, -41, -99};
      keys[83] = new byte[]{102, 52, 22, -96, -105, -74, -121, -115, -34, -13, 51, 78, -80, -37, -47, 43};
      keys[84] = new byte[]{-79, 120, -74, -24, -17, -70, 71, 104, 68, 6, 55, 5, 122, 91, -13, -64};
      keys[85] = new byte[]{-76, 38, -55, -121, -92, 108, 69, -106, -103, -62, 46, -111, 97, 50, 37, -81};
      keys[86] = new byte[]{-11, -13, -80, 91, 117, 65, 1, -106, 56, 50, 6, 57, -117, 31, -48, -119};
      keys[87] = new byte[]{65, -107, -70, 101, -86, -5, -9, 86, 51, 44, -121, 28, -121, -56, -55, 75};
      keys[88] = new byte[]{95, 80, 66, -26, 98, -13, -44, 78, 84, 67, -43, 4, 108, -114, -25, -64};
      keys[89] = new byte[]{73, -44, -15, 38, -81, 3, -31, -8, -41, -6, 28, 28, 95, -7, -14, -48};
      keys[90] = new byte[]{4, 0, -39, -39, 88, 39, -74, 102, -104, -36, 90, -34, 117, -98, 79, 122};
      keys[91] = new byte[]{-54, 109, 87, 75, -91, 35, 123, -44, 52, 41, 74, -62, -10, -87, 7, 5};
      keys[92] = new byte[]{-56, 124, 20, 97, 9, -122, 99, 56, -46, -45, 98, -104, -15, 72, 67, -56};
      keys[93] = new byte[]{76, -32, 105, 114, -116, -39, -95, -77, 49, -29, -2, -47, -35, 72, 94, -125};
      keys[94] = new byte[]{70, 56, 39, -26, -9, 98, 60, 1, 12, 47, 68, 35, 119, -123, -119, -116};
      keys[95] = new byte[]{51, -50, -29, 65, 46, -11, -82, -3, -103, -116, 93, 111, -82, 24, 32, 40};
      keys[96] = new byte[]{34, -50, 1, -63, 7, 13, 19, -68, 111, 21, -4, 73, 23, 91, 64, 25};
      keys[97] = new byte[]{90, -27, -124, 34, -88, 69, 125, -38, -28, 76, -96, 79, 107, -19, -83, -28};
      keys[98] = new byte[]{-91, 19, -1, -67, -107, 125, 23, -76, -6, -60, -102, 83, 0, -36, -112, -116};
      keys[99] = new byte[]{90, -13, 49, 90, 127, -121, 119, -1, -71, 102, -1, 43, -49, -105, 53, 60};
      keys[100] = new byte[]{-49, 44, 68, 31, 58, -94, -85, -39, -93, 45, -83, 101, 8, -100, -48, -67};
      keys[101] = new byte[]{111, -102, -20, 94, 51, -13, 41, -44, -17, -98, -121, 114, -97, 11, -74, 121};
      keys[102] = new byte[]{61, 42, 0, 17, -77, -44, 64, 12, 105, 38, 80, 1, -103, 115, 40, 23};
      keys[103] = new byte[]{123, 49, 103, 11, -25, 51, -58, -82, -96, 95, -15, 90, -73, -51, -117, -80};
      keys[104] = new byte[]{-114, 106, -120, 12, 110, -55, -67, -94, -80, 50, 74, -113, -122, -6, -30, -68};
      keys[105] = new byte[]{-107, 57, 35, -14, -103, 110, 88, -72, -2, 113, -33, 107, -31, -12, 73, -90};
      keys[106] = new byte[]{23, -75, 119, 39, 97, 79, -3, 111, 20, -32, -36, -65, -113, -75, 1, 58};
      keys[107] = new byte[]{9, 96, 89, -4, -127, 113, 110, -28, -82, 45, -109, -34, 98, 54, -93, -89};
      keys[108] = new byte[]{58, 21, -9, -61, -14, 125, -52, -30, 68, 90, 63, 59, 3, 112, 28, -57};
      keys[109] = new byte[]{-34, 80, 32, 8, -114, 1, -66, -24, -105, -86, -124, 37, -6, -68, 41, 0};
      keys[110] = new byte[]{-49, -56, 43, -44, 117, 4, -18, -50, 81, -25, -100, 79, 96, 109, 74, -58};
      keys[111] = new byte[]{110, 106, 95, -100, 116, -60, 126, -55, -99, 96, 23, -106, 105, 92, 97, 51};
      keys[112] = new byte[]{-86, -106, 117, 82, -110, -37, 90, 70, 41, -86, -4, -18, 53, 86, 43, 19};
      keys[113] = new byte[]{-49, 99, 18, -112, 37, 54, 110, 82, -15, -28, -78, 85, -110, 55, -128, 44};
      keys[114] = new byte[]{65, 77, 82, 3, -65, 29, -124, 8, 18, 120, -16, 30, -42, 47, 57, 52};
      keys[115] = new byte[]{37, 73, 55, 102, 73, 10, -45, -33, 54, -40, 107, -100, -90, 74, -38, -113};
      keys[116] = new byte[]{-3, -44, 123, -25, 6, -73, 2, 113, 42, -38, 91, 106, -69, -10, -49, 65};
      keys[117] = new byte[]{-64, -44, 106, 94, -89, 91, -13, 7, -21, -17, -63, 114, -9, 57, 76, -89};
      keys[118] = new byte[]{-114, 119, 48, -57, 115, -41, -89, -43, 1, 92, 46, 38, 91, 72, -112, -61};
      keys[119] = new byte[]{93, -59, 106, 25, 9, 61, 97, 84, -77, -50, 56, -50, 61, 82, -39, -28};
      keys[120] = new byte[]{101, 38, 108, -35, 95, -121, -29, 44, 114, 49, 107, -59, 105, -95, 25, 5};
      keys[121] = new byte[]{44, -24, 33, -33, -26, 29, 41, 19, -118, 14, 51, -59, -101, 5, -102, -45};
      keys[122] = new byte[]{15, -69, 4, 98, 94, -119, 56, -9, 72, -51, -76, -80, 14, -119, 113, -25};
      keys[123] = new byte[]{68, 118, 37, 91, -2, -81, -112, 30, 72, -117, -31, -74, -86, 110, 123, 88};
      keys[124] = new byte[]{-65, 80, 26, -12, 13, 24, -50, 45, 2, -9, 1, -38, -74, 27, -103, 10};
      keys[125] = new byte[]{92, 21, -112, -49, -48, 102, -98, -115, -85, 88, 24, -13, -40, -70, -119, -15};
      keys[126] = new byte[]{-25, -65, 20, 125, -90, 69, 87, 78, 46, -91, -23, 46, 53, -46, 74, 2};
      keys[127] = new byte[]{115, -29, -12, 67, -80, -62, 13, 89, 34, -47, -24, 89, -46, -34, 70, -35};
      keys[128] = new byte[]{-35, -125, 44, -86, -106, 14, 32, 28, 119, 16, -50, 125, 124, -119, 56, -88};

      byte[] imageVector = new byte[]{41, 2, 0, 0, 8, 2, 2, -128, 0, 10, 41, 0, 9, 45, 0, 50};
      int keySize = 128;
      int numberOfKeys = 129;
      int numberOfThreads = 1;

      byte[] expectedKeys = flatten(keys);

      byte[] resultKeys = KeystreamGenerator.generateKeystream(imageVector, keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 2;
      resultKeys = KeystreamGenerator.generateKeystream(imageVector, keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 3;
      resultKeys = KeystreamGenerator.generateKeystream(imageVector, keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 10;
      resultKeys = KeystreamGenerator.generateKeystream(imageVector, keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));
   }

   @Test
   public void testgenerateKeystream7() throws Exception {
      // ensure that multithreading is working as expected
      byte[] imageVector = {41, 2, 0, 0, 8, 2, 2, -128, 0, 10, 41, 0, 9, 45, 0, 50};
      int keySize = 128;
      int numOfKeys = 10000;
      byte[] oneThreadKeys = KeystreamGenerator.generateKeystream(imageVector, keySize, numOfKeys, 1);

      imageVector = new byte[]{41, 2, 0, 0, 8, 2, 2, -128, 0, 10, 41, 0, 9, 45, 0, 50};
      byte[] multiThreadsKeys = KeystreamGenerator.generateKeystream(imageVector, keySize, numOfKeys, 13);
      assertTrue(Arrays.equals(oneThreadKeys, multiThreadsKeys));
   }

   @Test
   public void testgenerateKeystream8() throws Exception {
      System.out.println("testgenerateKeystream8");
      byte[][] keys = new byte[313][];
      keys[0] = new byte[]{-74, -70, -89, 96, 87, -97, -14, 86, 10, -84, 123, -10, 6, 55, -57, -6};
      keys[1] = new byte[]{124, -77, -122, 49, -123, -123, -119, -22, 41, 98, 95, -58, -17, -79, 29, -73};
      keys[2] = new byte[]{-49, 38, -23, 67, 27, 127, 53, -35, 126, -118, -52, 68, -121, -35, -125, -1};
      keys[3] = new byte[]{107, 16, -110, -15, -86, -46, 70, 127, -12, -52, -32, -32, 77, 125, 38, 110};
      keys[4] = new byte[]{42, -36, 9, 37, -59, -48, 25, 127, -57, -44, 31, -107, -5, -48, -76, 47};
      keys[5] = new byte[]{122, 26, -99, -58, -88, 43, 68, -82, 97, 110, 45, 30, -86, -88, -31, -108};
      keys[6] = new byte[]{48, -96, -92, -95, 125, 37, -127, -85, 94, 44, -104, 7, 117, 4, 2, 124};
      keys[7] = new byte[]{-92, 126, -58, 9, -53, 60, -97, 105, 92, 69, 40, -3, -61, 78, -125, -74};
      keys[8] = new byte[]{4, -111, -68, -50, -72, -97, -64, -66, -20, -66, 38, 78, -68, -128, 19, -4};
      keys[9] = new byte[]{-127, -76, 84, 42, -113, 26, 37, 24, 127, -69, -32, 122, 25, -17, 24, -119};
      keys[10] = new byte[]{38, 87, 55, -45, -80, 126, 64, 32, -9, -21, -90, -56, -104, -94, -60, 119};
      keys[11] = new byte[]{-43, -113, -59, -21, -35, -34, 14, 17, -67, -119, 122, -62, -7, 120, -36, 9};
      keys[12] = new byte[]{59, -126, 75, -77, -4, 96, 64, 114, 34, -122, 40, 2, 88, -109, -23, 63};
      keys[13] = new byte[]{-126, -65, 34, 62, -4, -85, -18, -11, -102, -12, -42, -121, 40, 45, -35, 93};
      keys[14] = new byte[]{38, -43, -53, -115, 21, 79, 44, -106, 39, 113, 99, -94, 46, -42, 118, 39};
      keys[15] = new byte[]{124, -114, -4, -5, -11, -63, 55, -65, 20, -4, 30, 92, 27, -55, 97, -44};
      keys[16] = new byte[]{-42, 99, -55, -31, -5, -94, -17, -107, -31, -20, -122, -95, -70, 79, -94, -25};
      keys[17] = new byte[]{117, -106, 98, -2, -107, 109, 103, 30, -99, 47, -66, 51, -119, -125, 33, -56};
      keys[18] = new byte[]{4, -82, -63, -76, 83, -76, -65, 80, 5, -64, -84, 126, 92, -90, 14, 91};
      keys[19] = new byte[]{93, -3, -125, -23, 9, 26, 37, 74, 6, 83, -33, 122, 60, 26, -85, -95};
      keys[20] = new byte[]{-87, -24, 124, 52, 23, -13, -52, 20, -46, 107, 88, 13, -68, 94, -45, 10};
      keys[21] = new byte[]{-99, -91, -59, 33, 72, 26, 17, -127, -4, -59, 51, -57, -14, -82, 35, -119};
      keys[22] = new byte[]{-48, 2, -100, 23, -78, -74, -8, -54, -115, 65, 37, -25, 17, -47, -22, 19};
      keys[23] = new byte[]{-30, 13, 21, -32, 57, 78, 14, -105, -127, -115, -37, 33, -52, 48, -90, 88};
      keys[24] = new byte[]{-74, -64, -89, 86, -11, -110, -83, 116, -93, 61, 100, 53, -68, -68, -124, -104};
      keys[25] = new byte[]{98, -92, -96, -44, -74, 13, 117, -83, 109, -6, -33, -76, 3, 127, 95, -45};
      keys[26] = new byte[]{-94, 106, 41, -114, -102, -72, 110, 67, 59, 34, 102, -97, -93, -121, -59, 51};
      keys[27] = new byte[]{-104, -56, -18, -92, 1, -71, -31, -57, -93, 117, -39, 99, 93, 0, -32, -126};
      keys[28] = new byte[]{124, -29, -103, -24, -17, 124, -28, 115, 62, 94, 100, 97, -4, 115, 27, -127};
      keys[29] = new byte[]{50, -7, -34, -97, 100, 90, 109, -15, -8, 16, -112, -83, 20, -73, 10, 78};
      keys[30] = new byte[]{116, 38, 72, -71, 99, -20, 103, -87, 119, 109, -7, -125, -98, -64, 114, -104};
      keys[31] = new byte[]{-85, 0, 86, 127, -23, -71, 94, -74, 126, 58, -114, 125, -61, -11, -59, -62};
      keys[32] = new byte[]{3, -12, -121, 47, 90, 64, 50, -49, 49, 58, -15, 61, 126, -47, -7, 10};
      keys[33] = new byte[]{44, 63, -58, 8, 1, -103, -95, -95, 85, -58, -13, 126, 24, 102, 61, -102};
      keys[34] = new byte[]{-42, -63, -86, 68, -48, 50, 4, 30, 87, 0, -28, 93, 104, 118, 90, 11};
      keys[35] = new byte[]{82, 6, -126, 112, 0, 80, 30, 70, 124, 85, 114, -116, 68, -24, -12, 67};
      keys[36] = new byte[]{0, 86, 89, -48, -19, -59, 102, -97, -74, 53, 11, -112, -37, 60, -109, -117};
      keys[37] = new byte[]{74, -54, 42, 78, -92, -28, 24, 97, 35, 18, 105, 52, 112, 72, -20, 85};
      keys[38] = new byte[]{-61, 120, 122, 28, 77, 42, 40, -59, 22, -3, -93, -40, 76, 101, 14, -100};
      keys[39] = new byte[]{-93, 64, -83, -116, -116, -111, -50, -103, -115, 34, 99, -8, 47, 35, 45, -104};
      keys[40] = new byte[]{-90, -24, 38, 67, 41, -51, -24, 21, -79, 33, 72, -9, 59, -39, -117, -122};
      keys[41] = new byte[]{119, -40, 110, -45, -38, -72, 110, -43, 47, 19, 37, 77, 111, -5, 12, 87};
      keys[42] = new byte[]{-20, 70, -34, -76, 31, 14, -18, 98, -118, -26, 37, -41, 20, 60, -101, -94};
      keys[43] = new byte[]{45, -26, 108, 104, -116, -100, -19, 78, 12, 47, -85, 35, -90, 124, 65, -43};
      keys[44] = new byte[]{-25, 70, -22, -20, 94, 33, -98, 28, -72, 1, 35, -55, 106, 91, -60, 39};
      keys[45] = new byte[]{-6, 110, -53, -74, -82, 66, -109, 114, -48, 78, -64, -38, 90, 21, -11, 4};
      keys[46] = new byte[]{77, -127, -84, 54, 67, 20, -27, 66, -86, 102, -24, 32, -50, 46, 112, 0};
      keys[47] = new byte[]{94, -69, -8, -59, 40, 92, -26, 50, -105, -121, 14, -126, -2, 117, -101, 82};
      keys[48] = new byte[]{-6, -106, 60, -56, 51, -66, -3, -94, -17, -17, -110, -99, 41, -100, 3, -113};
      keys[49] = new byte[]{18, 85, -123, 108, -55, 53, 122, -44, -3, -38, 47, 18, 0, -80, -56, 101};
      keys[50] = new byte[]{-69, 69, 4, 127, 122, 122, 27, 15, -116, 50, 77, 94, 124, 37, 70, 98};
      keys[51] = new byte[]{104, 27, 80, 122, 63, 65, 31, -24, 20, -58, -11, 110, -89, 1, 6, -85};
      keys[52] = new byte[]{-60, -121, 50, -84, -60, 115, -47, 1, -68, -42, -38, -109, 99, 118, 85, 59};
      keys[53] = new byte[]{78, -45, -62, -22, 98, -36, 32, 35, 56, -6, -91, 76, -34, 18, 93, 48};
      keys[54] = new byte[]{11, 113, -56, -123, -124, -93, -75, 38, 56, 29, -46, -120, 107, -51, -98, 54};
      keys[55] = new byte[]{-35, 66, -83, -73, -53, -93, 14, 100, -22, 17, -115, 50, 56, 14, -3, -54};
      keys[56] = new byte[]{22, -54, 68, 68, -101, 50, -68, 88, 10, -39, 96, 122, 65, -88, -68, -75};
      keys[57] = new byte[]{80, 28, 33, 64, 54, -78, 113, -1, -77, -118, -5, -111, 20, 21, 24, -53};
      keys[58] = new byte[]{13, 102, -118, 30, 88, 13, 69, -24, 15, -111, -75, -42, 80, -115, 25, 80};
      keys[59] = new byte[]{14, 42, 1, 99, -89, -108, 5, -23, 82, 8, 1, -58, 116, 41, 16, 103};
      keys[60] = new byte[]{91, -26, 78, 51, -57, 44, -27, 100, -2, -1, -28, -113, -38, 67, 117, -72};
      keys[61] = new byte[]{24, -101, -2, 69, 2, -97, -119, 59, -91, -94, 100, -93, 59, 110, 64, 127};
      keys[62] = new byte[]{-81, -33, 55, 50, 83, -124, 105, 64, 112, 18, -12, 59, -38, -115, 73, -125};
      keys[63] = new byte[]{-79, 72, -32, 1, 76, 114, -12, 123, -48, 116, 2, 119, 115, 31, -64, 54};
      keys[64] = new byte[]{-94, 1, -123, -95, 81, 107, 76, -123, 109, -85, -20, -101, 91, 109, -69, -97};
      keys[65] = new byte[]{-53, -29, 85, -25, 4, 7, -118, -94, -119, -91, 43, 36, 61, 80, -53, -94};
      keys[66] = new byte[]{75, -61, 106, -124, 90, -103, 78, 127, -2, 51, -53, 19, -98, 108, -34, 35};
      keys[67] = new byte[]{119, -54, -69, -87, 6, -91, -45, 8, 115, 28, 37, 0, -125, 20, 42, 91};
      keys[68] = new byte[]{-3, 106, -90, -29, 86, 110, 3, 18, 106, -62, 13, -76, 126, -17, -57, 65};
      keys[69] = new byte[]{-31, -59, 115, 62, -106, -25, -127, -118, 112, 125, 53, 111, 108, 65, 54, -127};
      keys[70] = new byte[]{48, 31, 107, -91, -49, -42, -27, 124, -97, 58, 15, 64, 68, -118, -32, 76};
      keys[71] = new byte[]{-86, -11, -46, 29, -80, -53, -71, 62, 84, -116, -43, -23, 100, 66, -86, 15};
      keys[72] = new byte[]{-12, 30, -110, -15, 55, -24, -63, -65, 13, -2, 74, -71, -47, -107, -72, 43};
      keys[73] = new byte[]{-33, -8, 105, -32, 116, 75, 109, 103, 110, 7, 1, -59, -119, 60, 7, -14};
      keys[74] = new byte[]{-22, 57, 103, 33, 47, -102, -73, 28, -53, 81, 4, -92, 103, 24, 19, 27};
      keys[75] = new byte[]{28, 43, 98, -108, -87, -120, 93, -61, -35, 9, -97, 55, 52, -68, -10, -66};
      keys[76] = new byte[]{114, -33, -29, -7, -30, 81, 118, -113, -99, 66, 125, -114, 127, 87, 102, 89};
      keys[77] = new byte[]{-54, 82, 83, 24, -118, 64, 110, 41, -85, 109, 4, 109, 74, -7, -65, 37};
      keys[78] = new byte[]{7, -34, 11, -105, 91, -13, 51, -5, -77, -75, -49, 105, -98, -26, 67, 5};
      keys[79] = new byte[]{-93, -77, 10, 38, -4, 8, -87, 49, 12, 62, 54, 102, 14, -13, -72, -49};
      keys[80] = new byte[]{-97, 75, -120, -106, -30, -43, 44, 97, 95, -98, -112, -93, 24, -10, -126, -62};
      keys[81] = new byte[]{-118, -11, 41, -114, 106, 123, -18, -51, -113, -124, -81, 86, 51, -128, 38, 3};
      keys[82] = new byte[]{35, 104, 80, 23, 65, -123, -93, -90, -23, -23, -115, -61, -110, 60, 9, 18};
      keys[83] = new byte[]{-51, -81, 127, -87, -15, 84, 126, 104, 74, 54, 85, 62, -121, 126, 90, 40};
      keys[84] = new byte[]{8, 74, -33, 89, -88, -108, 72, -98, 105, 42, -107, 78, 35, -75, 109, -103};
      keys[85] = new byte[]{67, 58, 19, -118, 99, 56, 30, 57, -69, 18, 10, -54, 6, 30, 77, -43};
      keys[86] = new byte[]{-39, -28, 89, 7, 121, 57, -79, -68, 69, -108, -86, -31, -15, -34, -10, -121};
      keys[87] = new byte[]{-107, -67, -32, 98, 81, 76, 29, -14, 23, 13, 64, -61, -69, 18, -123, -10};
      keys[88] = new byte[]{122, -3, 24, 123, -45, -100, 92, 50, 126, 36, 47, 0, -3, -23, -63, 15};
      keys[89] = new byte[]{-17, 72, -70, -6, -119, -92, 46, 46, 112, 86, 34, 7, 116, -96, 92, 110};
      keys[90] = new byte[]{-82, -65, 19, 94, -98, -56, -22, 59, -102, -88, -45, -14, 100, -127, 77, 103};
      keys[91] = new byte[]{58, -124, -68, 32, 89, 108, 28, -71, -75, -4, 94, 119, 30, -48, 42, -74};
      keys[92] = new byte[]{75, -45, -69, 61, -88, 75, -62, -4, 89, 53, 19, -15, 79, 112, 33, -62};
      keys[93] = new byte[]{10, 1, 106, -75, -98, -85, 72, -108, 85, -102, -63, -46, -111, 52, 115, 47};
      keys[94] = new byte[]{-18, 26, 69, -31, -101, -14, -30, 82, -29, 20, -41, 73, 17, -119, -19, 112};
      keys[95] = new byte[]{84, -10, 12, 85, -76, -3, -52, -53, -70, -9, 97, -116, -68, 86, 104, -33};
      keys[96] = new byte[]{-72, 1, 89, 20, 31, 0, -13, -86, -111, 63, -95, -93, -108, 92, 86, 25};
      keys[97] = new byte[]{65, 52, -39, -46, 64, -33, 104, -64, -56, 103, -48, 9, 14, -86, 7, -113};
      keys[98] = new byte[]{-113, -55, -9, -45, -110, 118, -93, 30, -60, 54, -43, -51, 126, -107, -41, -47};
      keys[99] = new byte[]{-17, -59, -47, -91, -40, 83, -62, 119, -48, -49, 5, 72, -36, 51, -29, -5};
      keys[100] = new byte[]{72, -120, 42, -100, 27, -110, 83, 75, 21, -62, -98, -3, 44, 105, -3, -1};
      keys[101] = new byte[]{-88, 61, -27, 127, 102, -31, 27, -61, 36, -108, 1, -4, 7, 103, -55, 72};
      keys[102] = new byte[]{-69, -35, 39, 80, 108, 79, 14, -41, 74, 59, 50, 1, -72, -8, 47, -18};
      keys[103] = new byte[]{88, 3, 10, -82, 48, -17, -13, -42, -51, 85, -39, -22, 112, 92, 38, -17};
      keys[104] = new byte[]{65, -119, 13, 43, -72, 109, 26, -73, -96, -58, -47, -106, -107, 127, -125, -30};
      keys[105] = new byte[]{101, 106, 71, 112, -37, -18, 115, 89, -127, -41, 94, 16, -28, 94, -98, 115};
      keys[106] = new byte[]{22, -45, 114, -66, -100, 111, 123, 119, -81, 19, 60, 102, 59, 83, 28, -97};
      keys[107] = new byte[]{46, 84, -62, -74, 22, 48, -27, -34, -34, -54, 18, -100, -36, -15, 97, -47};
      keys[108] = new byte[]{63, 6, 82, 76, 55, 75, 75, -56, -109, -32, 50, -14, -107, 34, 76, -40};
      keys[109] = new byte[]{-67, 9, 97, 24, -98, -125, -110, 98, 19, 15, -69, 10, -111, 101, 28, -9};
      keys[110] = new byte[]{27, -8, 38, 19, 85, 0, 6, 38, -55, 62, -49, 66, 76, -65, -40, 67};
      keys[111] = new byte[]{-96, 73, -22, 63, 53, 38, -56, -106, -119, 123, 91, -108, 50, -118, -58, 28};
      keys[112] = new byte[]{-26, -31, -124, -28, 25, 0, 31, -86, 124, 27, -39, 115, -30, -7, -16, -37};
      keys[113] = new byte[]{123, -71, -41, 108, -39, -12, 14, 122, 101, 34, -78, 126, -111, -82, -42, -33};
      keys[114] = new byte[]{26, -33, 8, 70, 100, 106, 78, 12, 69, 91, 123, 30, -20, 18, 10, 61};
      keys[115] = new byte[]{100, 118, 102, 48, 40, -55, -53, -54, -28, 32, -116, -93, -87, -126, -120, 107};
      keys[116] = new byte[]{37, -119, 117, -57, 48, 24, 20, -12, -98, -46, 15, 27, 2, 80, -11, 55};
      keys[117] = new byte[]{13, 19, -68, -6, 52, -9, 66, 6, -29, 45, 83, 88, 60, -52, -41, -77};
      keys[118] = new byte[]{-33, 91, -85, 70, -121, 91, -108, -21, -97, -42, 42, 79, 86, -105, -60, 1};
      keys[119] = new byte[]{-46, 108, -17, 38, -92, -64, -17, -3, 15, -93, -45, -72, 67, -90, -79, 108};
      keys[120] = new byte[]{71, -36, 101, 39, 121, -123, 85, -102, 54, 9, 85, 91, -58, -87, 28, -40};
      keys[121] = new byte[]{-57, -75, -54, -40, 108, -8, 112, 109, 110, -8, 48, -19, -106, 14, -7, 122};
      keys[122] = new byte[]{17, 89, 50, -88, -74, -89, 73, -122, -49, -57, -66, 0, 107, -106, -49, 82};
      keys[123] = new byte[]{99, -70, 14, -41, -71, -35, 125, 18, 26, 92, 32, -94, -102, -43, 127, 43};
      keys[124] = new byte[]{75, 60, 19, 49, 16, 10, -31, -66, 81, 65, -4, 103, -122, 59, -19, -46};
      keys[125] = new byte[]{-45, 115, -89, -35, 16, 127, -77, 101, 123, -39, 58, 7, -77, -83, 75, -72};
      keys[126] = new byte[]{60, 26, -101, 1, -32, -69, -84, -59, -23, 27, -75, -15, -78, 114, 63, 68};
      keys[127] = new byte[]{67, 102, 83, -92, 6, 102, -117, -112, 101, 44, -3, -118, 102, 37, 77, 75};
      keys[128] = new byte[]{124, -40, 68, 113, -72, 116, 109, 84, 59, 107, -54, -124, 81, 26, 54, -1};
      keys[129] = new byte[]{-104, -112, -96, 105, -6, -26, -56, -64, -89, -77, -114, 49, -1, 68, 63, -26};
      keys[130] = new byte[]{59, -98, 91, 74, -2, 51, -52, 12, 61, -112, -21, 55, -20, 122, 0, 34};
      keys[131] = new byte[]{-38, 90, -85, -109, -13, -68, -44, 57, -127, -94, -37, 72, -29, -109, -108, -26};
      keys[132] = new byte[]{-41, 50, -40, 90, 94, -104, 121, 26, 31, 18, -98, -10, -1, -43, 93, 32};
      keys[133] = new byte[]{2, 66, 68, -93, -54, 121, -50, -104, 73, 6, -94, 60, -58, -88, 104, 12};
      keys[134] = new byte[]{-29, -44, 57, 115, 75, -87, -17, -88, 5, 78, -15, -82, 92, 96, 77, 5};
      keys[135] = new byte[]{40, -85, -41, -4, -54, 81, 33, -39, 91, 61, -54, 44, 23, 101, 121, 106};
      keys[136] = new byte[]{-79, -123, -11, -90, -124, 9, -14, 65, 35, 22, -29, 86, -45, -69, 16, 104};
      keys[137] = new byte[]{85, 41, 49, 89, 109, 8, -81, 44, -120, -62, 67, -43, 76, -90, -75, -89};
      keys[138] = new byte[]{-32, -29, 77, -86, -74, -39, -63, -72, 53, 127, -76, 117, -63, 69, -45, 119};
      keys[139] = new byte[]{-126, -43, 49, 24, -99, 97, -36, 127, -51, -32, -63, 40, -120, 43, -112, -49};
      keys[140] = new byte[]{12, 77, 16, 1, 15, -108, 88, -19, -96, -41, 55, 111, -91, 53, 82, -6};
      keys[141] = new byte[]{-48, 33, 20, 6, 44, 97, 127, -14, -97, -25, 20, 84, -9, -96, 96, 73};
      keys[142] = new byte[]{49, 105, 117, 58, 67, 84, 90, -12, -121, 7, 75, 54, 19, 120, -70, 19};
      keys[143] = new byte[]{103, 12, -9, -68, -48, -116, 121, 91, 122, 26, 31, -1, -83, -85, 120, 72};
      keys[144] = new byte[]{46, 5, 14, -75, -99, 117, 95, 50, 121, -126, 50, 96, -33, -20, -128, -85};
      keys[145] = new byte[]{-106, 44, -48, -42, 118, -91, -21, -59, 85, -73, 84, -15, -10, -59, -111, -128};
      keys[146] = new byte[]{51, -124, 102, 25, -9, -15, -117, -18, -81, -61, 92, 84, 85, 5, 98, -9};
      keys[147] = new byte[]{-72, -103, 67, -72, -110, 126, 67, 53, -127, 118, 126, -116, 109, -34, -50, 86};
      keys[148] = new byte[]{27, 22, 96, 33, 122, -112, 28, 114, 56, 1, -36, -35, 113, 105, -105, -3};
      keys[149] = new byte[]{110, 11, 62, 104, -47, -104, -5, 111, -78, -123, -65, -44, 75, -60, -71, -90};
      keys[150] = new byte[]{23, -24, -26, 86, -88, 55, -124, -27, -51, -51, -105, -77, -42, -123, -59, 19};
      keys[151] = new byte[]{-1, 67, -90, 95, 69, 28, -78, 82, 47, -19, -36, 110, -4, -24, 8, -21};
      keys[152] = new byte[]{-32, -74, -60, -14, -122, 81, 78, 90, -66, -64, -47, 51, -11, 19, 46, -13};
      keys[153] = new byte[]{23, 75, 73, 53, 85, -80, -126, -77, -4, 73, 2, 79, -68, -91, 53, -36};
      keys[154] = new byte[]{98, 46, 115, -124, -120, -99, -54, -24, 53, 71, 108, -125, 106, 49, 3, 15};
      keys[155] = new byte[]{126, -84, 62, 82, 73, -55, 75, -113, 17, -12, 109, -9, -18, -75, -40, 8};
      keys[156] = new byte[]{3, 40, -60, -25, 85, -92, -117, -106, 44, -54, 15, 99, 10, 65, 124, 62};
      keys[157] = new byte[]{79, -8, 104, 119, -60, 43, -105, 16, -123, -14, -34, 90, -34, 81, 93, -90};
      keys[158] = new byte[]{107, -42, 15, 35, 47, 78, -6, -31, -46, 29, 41, 95, -13, -29, -18, 115};
      keys[159] = new byte[]{-43, -7, -94, -47, -115, 45, -33, 3, 110, 35, 111, 74, -82, -4, -42, 100};
      keys[160] = new byte[]{-114, -72, -81, 82, 12, -53, 78, -109, -37, 109, -91, 28, 58, -1, 14, -104};
      keys[161] = new byte[]{-56, -106, 65, 50, 108, -107, -91, -34, -9, -12, 20, 118, -79, -49, -62, -100};
      keys[162] = new byte[]{87, 112, 78, -80, -86, -114, 83, 117, -30, -81, 114, 111, 21, -9, -66, -21};
      keys[163] = new byte[]{-88, -109, -96, 7, -66, -78, -50, 14, 17, 87, -17, 86, 66, 1, 39, -5};
      keys[164] = new byte[]{33, -19, 14, 121, 27, -36, -41, -9, -112, 123, -70, -107, -38, -67, -58, 35};
      keys[165] = new byte[]{48, 92, -74, 50, -127, -7, 68, -72, 12, 51, 123, 117, -34, 3, -123, 102};
      keys[166] = new byte[]{32, -105, 7, -87, 121, -39, 36, -108, -103, 78, 119, -30, -107, 102, 40, -119};
      keys[167] = new byte[]{116, 9, 71, 90, -58, 22, -62, -101, 0, -103, -29, 83, 94, -5, 53, -41};
      keys[168] = new byte[]{106, 67, -56, 80, 63, 69, -69, 86, 85, -23, -73, -48, 116, -10, 20, 99};
      keys[169] = new byte[]{115, -8, 117, -38, -7, 104, -64, 25, 68, 98, 3, -25, 124, 66, -66, -83};
      keys[170] = new byte[]{-71, 69, -82, -70, 54, -48, -83, 43, -39, -64, -18, 13, 97, 19, 74, -106};
      keys[171] = new byte[]{46, -80, 22, -125, 122, 18, -117, 15, 114, -124, -33, 10, -85, 18, 114, 109};
      keys[172] = new byte[]{120, 7, 46, -1, -111, -115, -114, 75, 106, -82, 103, 106, -11, 108, -30, 115};
      keys[173] = new byte[]{41, 105, 95, -55, -18, -89, -64, -8, -70, 44, 104, 120, -3, 114, 68, 41};
      keys[174] = new byte[]{53, -128, -47, 56, 48, 105, -6, 6, -64, -41, 113, 96, 18, 77, -54, 8};
      keys[175] = new byte[]{1, 78, -4, 2, -114, 26, -118, 112, -10, 14, 52, 54, 18, 59, 92, 93};
      keys[176] = new byte[]{-5, 69, 116, -12, -93, -122, -67, -38, -125, -100, 52, -37, 43, 74, -106, -19};
      keys[177] = new byte[]{-23, -92, -102, 59, -63, -35, 76, -91, -110, -108, -83, -121, 106, -86, 62, -84};
      keys[178] = new byte[]{-97, 16, -126, 23, -60, 125, -71, -30, 108, 62, 24, 13, -57, 65, 126, -20};
      keys[179] = new byte[]{90, 60, 88, -3, -32, 82, -54, -56, 17, -103, -31, 91, 80, 69, 10, 16};
      keys[180] = new byte[]{-123, -69, -40, 31, -67, 76, 79, 27, 40, -37, -24, -67, 81, -128, -18, -64};
      keys[181] = new byte[]{120, -79, 8, -110, 58, 62, 70, -95, 39, 72, -19, 18, 57, 8, 61, 66};
      keys[182] = new byte[]{1, 93, -15, -79, -40, 90, 74, 114, 42, -112, -74, -32, 8, 49, 73, 37};
      keys[183] = new byte[]{126, 81, 74, -89, -90, 77, 10, -88, -84, -60, -38, -25, 79, 36, -59, -6};
      keys[184] = new byte[]{-67, -125, -19, 19, 108, 100, 22, -127, 108, -117, -8, 82, 20, -83, 72, -69};
      keys[185] = new byte[]{22, 13, 4, -49, -69, -36, 96, -39, -113, 28, 92, -28, -117, 10, -85, 3};
      keys[186] = new byte[]{98, 97, -14, 16, 102, 70, 98, 20, -24, 95, -118, -116, -36, -61, -85, -82};
      keys[187] = new byte[]{16, -128, 46, -27, 17, -80, 37, 15, 20, -12, 112, -42, 119, 78, 75, -6};
      keys[188] = new byte[]{-20, -20, -75, -78, -126, -36, -40, -30, 56, 46, -107, 72, -126, 108, -79, 111};
      keys[189] = new byte[]{92, 1, 61, 36, 12, -118, 40, 107, 28, -49, 124, 116, 75, 65, 9, -67};
      keys[190] = new byte[]{7, -57, 92, 60, -92, -68, -79, 71, 13, -51, 118, 126, -92, -109, 97, 102};
      keys[191] = new byte[]{13, 109, -66, -36, 1, 3, 33, -66, -46, -65, 105, 88, -91, -126, 114, 67};
      keys[192] = new byte[]{-127, 52, -25, -72, 32, 32, 37, 125, 53, 12, -41, -45, 119, 110, -80, 88};
      keys[193] = new byte[]{-47, 90, -15, 123, -71, -65, -62, -45, 93, 88, -112, -112, -3, -73, 118, -4};
      keys[194] = new byte[]{23, 115, 3, -31, 117, -92, 113, 125, -77, -83, 8, 109, -5, 45, 45, 30};
      keys[195] = new byte[]{-84, -99, 94, 52, -63, -75, -65, 125, -22, 57, 23, -50, 11, 84, -86, -128};
      keys[196] = new byte[]{-66, -38, 1, 94, 93, 15, 6, -61, 65, -7, -85, -23, 17, 39, -78, -44};
      keys[197] = new byte[]{-126, -126, 8, 52, -113, 109, 14, 4, 56, -61, -16, -83, -126, 54, -71, 102};
      keys[198] = new byte[]{-93, -124, 85, 18, -53, 48, 114, -116, 93, -2, 13, -27, 45, 46, 49, 9};
      keys[199] = new byte[]{-115, 41, 93, 58, -68, -90, 81, 43, -68, -121, -20, -76, 71, 74, 38, -77};
      keys[200] = new byte[]{-5, -4, 52, 1, -69, 120, 7, 119, 108, -101, 103, 94, -46, 89, 76, 59};
      keys[201] = new byte[]{55, -109, -97, 72, -78, 7, -7, 14, -76, -83, 127, -54, 75, -12, 68, -11};
      keys[202] = new byte[]{-39, 83, -20, -78, -37, -76, -115, -46, -99, -74, 65, -96, -6, 22, 51, -120};
      keys[203] = new byte[]{-65, -124, -97, 10, 115, 113, -124, -113, 112, 120, 78, 98, 106, 56, 31, 107};
      keys[204] = new byte[]{-109, 89, -89, -89, 59, 105, -66, -41, -125, 1, 79, 32, 13, 14, 26, 124};
      keys[205] = new byte[]{18, -60, 64, 16, -65, -57, -112, -84, -11, 81, 126, 45, 43, 125, -100, 122};
      keys[206] = new byte[]{44, 27, -117, 85, -115, -80, 33, -56, 105, -116, 89, 117, -27, 36, -30, -108};
      keys[207] = new byte[]{-106, -116, 63, -4, 39, 125, 66, 30, 47, 61, 55, -1, 10, 45, 28, -81};
      keys[208] = new byte[]{-31, -58, -93, 43, -75, 36, 121, -106, -24, 108, 21, 119, -114, 78, 55, 47};
      keys[209] = new byte[]{-16, 120, 95, -41, 44, -9, 98, -47, -115, 11, -6, 92, -68, -63, 101, 95};
      keys[210] = new byte[]{-124, -41, 102, -73, 82, -96, 61, -21, -47, 54, 97, -21, 25, 106, -79, -3};
      keys[211] = new byte[]{-24, 82, 32, 41, 72, 25, 98, -36, -70, 67, -115, -43, -42, 65, 32, -110};
      keys[212] = new byte[]{-99, 33, 98, -29, -4, 22, 17, 80, 109, 61, -41, 112, 22, 96, -96, 4};
      keys[213] = new byte[]{93, 20, 8, 97, 60, 123, 58, 31, 37, 113, -75, 71, -70, 90, -3, -118};
      keys[214] = new byte[]{37, 78, -125, -104, 35, 124, 124, -85, -120, 125, -106, 83, -52, -49, 96, -122};
      keys[215] = new byte[]{-112, 42, -40, 100, -75, -42, -98, 56, -114, 29, 29, 71, -48, -75, -38, -58};
      keys[216] = new byte[]{16, 88, -123, -89, 106, -65, 7, 51, -25, 17, -112, -106, 112, -35, 67, 87};
      keys[217] = new byte[]{-43, -77, 39, -48, 74, 36, -50, -90, -100, 95, 37, -98, -124, -82, -9, -21};
      keys[218] = new byte[]{122, 79, 4, 81, 41, -48, -28, -57, -4, -126, 2, -11, 5, 107, -63, 62};
      keys[219] = new byte[]{103, 90, -46, 112, 9, 104, -50, 5, 83, -10, -46, -97, -30, -44, 12, -111};
      keys[220] = new byte[]{-115, 66, 23, 23, -76, 93, -36, 57, 37, -15, 114, -80, -88, -54, 22, 81};
      keys[221] = new byte[]{48, 106, -66, -14, 63, 98, 59, -41, 33, -74, -78, -70, 21, -90, 116, 93};
      keys[222] = new byte[]{50, 56, 33, -109, -3, 98, -91, 55, 17, -70, -54, 8, -55, -6, -99, 18};
      keys[223] = new byte[]{18, 101, 40, -33, -5, 34, 118, -115, 85, -107, 73, 123, 53, 108, -83, 107};
      keys[224] = new byte[]{-122, 32, -89, 62, 34, -101, 115, -7, 11, 106, -76, -54, 107, 49, 18, 50};
      keys[225] = new byte[]{60, 30, 49, 74, -61, 112, -61, 59, -16, -110, 118, 122, 20, 72, -44, -90};
      keys[226] = new byte[]{-22, 116, 12, 6, -75, -25, -80, -123, -39, -16, 7, 23, -16, -122, -46, -36};
      keys[227] = new byte[]{115, 61, 53, 51, -124, -80, 66, 126, 22, 1, 100, -84, -104, 17, -125, 27};
      keys[228] = new byte[]{-11, -46, 77, 52, -97, 16, 29, 126, 13, -11, -6, -2, -44, 35, -12, -102};
      keys[229] = new byte[]{9, 95, 9, -114, -5, -114, -68, 80, 74, 53, -114, 93, 25, 41, 87, -25};
      keys[230] = new byte[]{-11, -121, 91, -95, -113, 32, -74, 55, -7, -59, -64, 69, -23, -2, -105, 100};
      keys[231] = new byte[]{-50, 76, -51, -86, -39, 120, 28, 56, 82, -17, -107, 74, 26, -70, 4, 75};
      keys[232] = new byte[]{118, 89, 42, -87, 39, -71, -53, -22, 73, -110, 13, 8, -2, -80, -128, 0};
      keys[233] = new byte[]{35, -52, 67, -59, 9, -110, -78, 123, 99, -21, -4, 18, -61, -45, -72, -104};
      keys[234] = new byte[]{-8, -121, -99, 54, 93, -123, -106, 86, -76, -74, -33, -41, -76, 88, -119, 23};
      keys[235] = new byte[]{-107, 65, -21, 78, -84, -36, -118, 26, -62, 48, -93, -78, 60, -35, -70, -81};
      keys[236] = new byte[]{32, -44, 82, -51, -59, 105, 6, -79, 35, 73, -39, -52, -27, 103, 40, 113};
      keys[237] = new byte[]{26, -117, -54, -107, -29, 0, -86, 29, 25, 2, -114, 50, 92, 82, 91, 23};
      keys[238] = new byte[]{94, 67, -70, 60, -104, -8, -115, -14, 54, -71, -15, 75, -127, -76, 77, -77};
      keys[239] = new byte[]{54, 67, -40, 91, 56, 19, -121, 123, 98, -44, 17, 102, 33, -54, 81, 15};
      keys[240] = new byte[]{44, -23, -49, -116, 12, 1, 65, -71, 32, -59, -44, -128, 116, -60, -108, -17};
      keys[241] = new byte[]{-74, -19, -34, 0, 6, 8, -74, -50, -51, 28, -78, -44, 85, -4, -32, -41};
      keys[242] = new byte[]{36, 108, -100, 50, 126, -73, -102, -93, 70, -19, 41, 75, 53, -111, -108, 81};
      keys[243] = new byte[]{41, -121, 18, 100, -122, -68, -107, -64, 1, 27, -128, -5, -54, -58, -10, -113};
      keys[244] = new byte[]{-101, 110, 54, -5, -71, -100, 35, 98, -123, -64, 85, -52, -38, -112, -112, -13};
      keys[245] = new byte[]{116, -93, -114, -58, 46, 114, -73, 79, 14, -61, -69, 63, 35, -119, -13, -87};
      keys[246] = new byte[]{14, -35, 42, -108, 98, 67, 60, -3, -45, 49, 15, 3, 55, -101, -19, 60};
      keys[247] = new byte[]{-108, 38, -90, -6, 76, 96, -57, -24, -120, 111, 13, -111, -83, -24, -26, -11};
      keys[248] = new byte[]{-41, 74, -93, -16, -106, 62, -26, -107, 32, 0, -54, -35, -37, -84, -2, 116};
      keys[249] = new byte[]{84, -9, 87, -111, 31, -127, 82, -120, 73, -55, 70, 59, -99, 26, 97, 12};
      keys[250] = new byte[]{-124, 90, -114, 35, -25, -19, -128, -12, 74, 32, 110, 94, 55, 116, 127, 47};
      keys[251] = new byte[]{109, 120, 102, -102, 16, -17, -108, -58, -26, -91, -51, -119, 78, -4, 57, 70};
      keys[252] = new byte[]{55, 111, 112, 89, -15, -6, -52, 78, 3, 10, -89, 41, -122, -126, 30, 107};
      keys[253] = new byte[]{69, -25, 123, 5, 27, 95, -99, -51, -18, -39, 37, -2, -81, 87, 43, -8};
      keys[254] = new byte[]{24, 127, 17, 57, -97, -75, 75, -43, -94, -73, -40, 62, 65, -111, 90, -44};
      keys[255] = new byte[]{-2, 80, -61, -9, -9, 75, -90, -56, 58, 73, -64, 95, 28, 86, 11, -51};
      keys[256] = new byte[]{-96, 7, 72, -65, -69, 74, -100, -76, -101, -116, 73, -14, 113, 41, -106, 18};
      keys[257] = new byte[]{97, -21, -113, 124, -64, -33, 4, 16, 49, -94, -113, -67, 25, 108, 47, 57};
      keys[258] = new byte[]{-124, -89, -77, 7, 80, 10, -123, -85, 112, 77, 35, 124, -93, -40, 111, 37};
      keys[259] = new byte[]{-16, 123, -93, 83, 69, -39, -14, -82, 94, -67, 3, 8, 88, 75, 76, -51};
      keys[260] = new byte[]{27, -22, -57, -35, 59, 33, 53, 72, -38, 111, 70, -36, 24, -19, -123, 90};
      keys[261] = new byte[]{125, -114, 92, -72, -89, 112, 88, 55, 121, -35, 44, -40, 29, 13, -69, -77};
      keys[262] = new byte[]{-92, -63, -45, -95, -35, -17, 122, -73, 90, -68, -12, -118, -94, -102, 126, 116};
      keys[263] = new byte[]{-10, 79, -87, 80, -124, 116, -124, -75, -32, 122, 23, -116, -81, -80, 20, -87};
      keys[264] = new byte[]{-117, -21, 2, -31, -123, -125, 112, -89, 86, 54, 1, 60, 110, -109, 75, 15};
      keys[265] = new byte[]{-16, 38, 74, -3, -111, -26, -92, -35, -107, 25, 60, -91, 17, -23, -85, -82};
      keys[266] = new byte[]{-66, 57, 14, 32, -37, -117, 3, 109, -76, -37, -128, 70, 92, 124, -88, 81};
      keys[267] = new byte[]{-70, 47, -1, 45, 85, 86, 12, 110, 18, -41, 86, -22, -24, -44, 122, -106};
      keys[268] = new byte[]{-62, -14, 53, -119, -34, -72, 93, 93, 81, -89, 58, -40, -104, 74, 96, -34};
      keys[269] = new byte[]{23, -30, 54, -118, 114, 43, -44, 69, -69, 91, -1, -10, 97, -62, 5, -126};
      keys[270] = new byte[]{108, -123, 32, -8, -9, -25, -23, -74, -109, 104, 89, 104, -99, -82, -90, 78};
      keys[271] = new byte[]{98, -79, -43, 127, 57, -111, 58, 79, -94, 51, 51, 33, 25, 10, -12, 120};
      keys[272] = new byte[]{42, 60, -72, 85, -30, 95, -97, -120, -68, 85, 88, 33, 68, 58, 119, -20};
      keys[273] = new byte[]{-47, -66, -77, -59, -49, -63, -32, -19, -69, -78, 102, -82, 108, 73, -91, -49};
      keys[274] = new byte[]{19, -19, 7, -5, 67, -68, 60, -76, 21, 94, 95, 50, -95, 16, 118, 72};
      keys[275] = new byte[]{48, -91, 19, 111, -72, 31, 101, 59, 12, 94, -18, 10, 114, 108, 71, 25};
      keys[276] = new byte[]{75, -51, -66, 32, 15, 49, 51, 103, 63, 36, 114, -97, 37, 124, -120, 96};
      keys[277] = new byte[]{86, 18, -116, 41, -33, -67, -92, -31, -127, -101, -89, 104, -6, 78, 2, 124};
      keys[278] = new byte[]{9, 5, 17, -31, -67, 32, -2, -71, 47, 25, -48, 28, -38, 102, -15, 101};
      keys[279] = new byte[]{91, -92, 24, -78, 109, 32, -127, 4, -97, 64, -61, -16, 103, 79, -66, -54};
      keys[280] = new byte[]{19, 56, -115, -76, -121, -61, 10, 1, 123, -55, 102, -52, 91, -109, -14, -81};
      keys[281] = new byte[]{-103, 72, 8, 62, -11, -57, -64, -2, -106, -5, -103, 0, -13, 56, -9, -101};
      keys[282] = new byte[]{-81, 37, -111, 119, 89, 8, 65, 2, 107, 94, 89, -99, -59, -25, -6, -60};
      keys[283] = new byte[]{-79, 72, -113, -20, 45, -127, -49, 10, -22, -41, -100, 90, 59, 10, -81, -7};
      keys[284] = new byte[]{5, -118, -47, -105, 119, 112, 123, -64, -98, -98, -28, -123, 46, -18, -71, 79};
      keys[285] = new byte[]{99, -85, 108, 86, -19, -54, 87, 30, -32, -40, -122, 30, -13, 8, 14, -56};
      keys[286] = new byte[]{33, -118, 45, 89, 24, 46, -118, -87, -100, 20, 95, -57, 31, -24, -83, 85};
      keys[287] = new byte[]{-42, -110, -116, 9, -51, -106, 77, -36, 22, -80, 1, -100, -115, 104, 52, -50};
      keys[288] = new byte[]{86, 31, -123, -89, 54, -80, 0, 87, 106, 110, 5, -12, -109, -34, 28, -78};
      keys[289] = new byte[]{85, 9, -26, 16, 111, -92, 116, -56, -80, -124, -124, -90, -109, 127, 26, 50};
      keys[290] = new byte[]{-128, 108, 49, -101, -60, 7, 0, 85, -30, -116, 15, -91, -118, -101, -68, -65};
      keys[291] = new byte[]{-120, 16, -125, -27, -86, 5, -102, 93, -122, 92, -74, -18, 24, 61, 4, 10};
      keys[292] = new byte[]{115, 34, -6, -24, 75, 49, 42, -124, -125, -82, 75, -89, 84, -75, -106, 96};
      keys[293] = new byte[]{-32, 86, 4, 47, 3, 46, -76, -72, -88, 5, -47, 73, -10, -63, 20, -64};
      keys[294] = new byte[]{18, 49, 19, 8, 27, -4, 116, 100, 62, 7, -22, 121, -16, -91, -56, -100};
      keys[295] = new byte[]{-91, -122, -38, 102, 49, -97, -119, -42, 85, 25, 127, 38, -108, -121, -39, -50};
      keys[296] = new byte[]{69, -57, 19, 96, -36, -122, 55, 124, 120, -72, -127, -80, -71, 27, -122, 80};
      keys[297] = new byte[]{-120, -49, -80, -95, -78, 90, 6, -56, 82, -120, 88, 111, -127, -14, -49, -121};
      keys[298] = new byte[]{113, 124, -118, -48, -102, 46, 107, -29, 58, 37, -33, 47, 20, 35, -12, -89};
      keys[299] = new byte[]{51, -3, -105, 21, 27, -78, -79, 48, 1, 89, 112, 46, 126, 32, -11, -83};
      keys[300] = new byte[]{-100, 20, -19, -123, 54, -101, -106, 19, -86, 80, -82, -120, -66, 119, 111, 117};
      keys[301] = new byte[]{-85, -67, 106, 113, 108, -72, -124, -80, -76, -97, -26, -118, -32, 79, -89, 122};
      keys[302] = new byte[]{39, -45, -17, 62, -93, 8, -2, 30, 23, -60, -25, -92, 71, 86, -15, 0};
      keys[303] = new byte[]{116, 10, 15, -54, -116, 53, 37, 64, -52, -2, -111, -38, -49, -3, 108, 50};
      keys[304] = new byte[]{81, 27, 77, 66, -74, 12, 65, 68, -25, -103, -118, 64, -13, 45, 113, 103};
      keys[305] = new byte[]{13, -61, -125, 124, 91, -24, 95, 93, 29, -26, 99, 44, -83, 91, -16, -69};
      keys[306] = new byte[]{49, -61, -56, 64, -120, 54, 59, 46, 119, -46, 32, -103, 123, 48, 93, 48};
      keys[307] = new byte[]{-73, 101, 99, 112, -94, -79, -125, -72, 80, -74, -63, 105, 1, -68, -85, 0};
      keys[308] = new byte[]{-104, -52, -115, -42, 121, 24, -51, 20, -112, -56, -124, 44, -11, 56, -41, 61};
      keys[309] = new byte[]{15, 66, -13, -17, 3, -40, 19, -28, 125, -123, -124, -70, -40, 24, -51, 43};
      keys[310] = new byte[]{-33, 42, -93, 76, 11, -67, -57, -5, 56, -84, -119, 61, -73, -51, 76, -37};
      keys[311] = new byte[]{-36, 42, 122, -127, 40, -101, -92, -111, -20, -5, 119, -109, 90, 50, 87, 91};
      keys[312] = new byte[]{105, -35, 65, 76, 77, -104, 17, 93, -47, -2, 103, 32, 48, -69, 81, -69};


      String imageName = "1024X1024.jpg";
      byte[] imageVector = getImageVectorForImageName(imageName);
      byte[] expectedKeys = flatten(keys);

      int keySize = 128;
      int numberOfKeys = 313;

      int numberOfThreads = 1;
      byte[] resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));


      numberOfThreads = 2;
      resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 10;
      resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));
   }

   @Test
   public void testgenerateKeystream9() throws Exception {
      System.out.println("testgenerateKeystream9");
      byte[][] keys = new byte[313][];
      keys[0] = new byte[]{-74, -70, -89, 96, 87, -97, -14, 86, 10, -84, 123, -10, 6, 55, -57, -6};
      keys[1] = new byte[]{124, -77, -122, 49, -123, -123, -119, -22, 41, 98, 95, -58, -17, -79, 29, -73};
      keys[2] = new byte[]{-49, 38, -23, 67, 27, 127, 53, -35, 126, -118, -52, 68, -121, -35, -125, -1};
      keys[3] = new byte[]{107, 16, -110, -15, -86, -46, 70, 127, -12, -52, -32, -32, 77, 125, 38, 110};
      keys[4] = new byte[]{42, -36, 9, 37, -59, -48, 25, 127, -57, -44, 31, -107, -5, -48, -76, 47};
      keys[5] = new byte[]{122, 26, -99, -58, -88, 43, 68, -82, 97, 110, 45, 30, -86, -88, -31, -108};
      keys[6] = new byte[]{48, -96, -92, -95, 125, 37, -127, -85, 94, 44, -104, 7, 117, 4, 2, 124};
      keys[7] = new byte[]{-92, 126, -58, 9, -53, 60, -97, 105, 92, 69, 40, -3, -61, 78, -125, -74};
      keys[8] = new byte[]{4, -111, -68, -50, -72, -97, -64, -66, -20, -66, 38, 78, -68, -128, 19, -4};
      keys[9] = new byte[]{-127, -76, 84, 42, -113, 26, 37, 24, 127, -69, -32, 122, 25, -17, 24, -119};
      keys[10] = new byte[]{38, 87, 55, -45, -80, 126, 64, 32, -9, -21, -90, -56, -104, -94, -60, 119};
      keys[11] = new byte[]{-43, -113, -59, -21, -35, -34, 14, 17, -67, -119, 122, -62, -7, 120, -36, 9};
      keys[12] = new byte[]{59, -126, 75, -77, -4, 96, 64, 114, 34, -122, 40, 2, 88, -109, -23, 63};
      keys[13] = new byte[]{-126, -65, 34, 62, -4, -85, -18, -11, -102, -12, -42, -121, 40, 45, -35, 93};
      keys[14] = new byte[]{38, -43, -53, -115, 21, 79, 44, -106, 39, 113, 99, -94, 46, -42, 118, 39};
      keys[15] = new byte[]{124, -114, -4, -5, -11, -63, 55, -65, 20, -4, 30, 92, 27, -55, 97, -44};
      keys[16] = new byte[]{-42, 99, -55, -31, -5, -94, -17, -107, -31, -20, -122, -95, -70, 79, -94, -25};
      keys[17] = new byte[]{117, -106, 98, -2, -107, 109, 103, 30, -99, 47, -66, 51, -119, -125, 33, -56};
      keys[18] = new byte[]{4, -82, -63, -76, 83, -76, -65, 80, 5, -64, -84, 126, 92, -90, 14, 91};
      keys[19] = new byte[]{93, -3, -125, -23, 9, 26, 37, 74, 6, 83, -33, 122, 60, 26, -85, -95};
      keys[20] = new byte[]{-87, -24, 124, 52, 23, -13, -52, 20, -46, 107, 88, 13, -68, 94, -45, 10};
      keys[21] = new byte[]{-99, -91, -59, 33, 72, 26, 17, -127, -4, -59, 51, -57, -14, -82, 35, -119};
      keys[22] = new byte[]{-48, 2, -100, 23, -78, -74, -8, -54, -115, 65, 37, -25, 17, -47, -22, 19};
      keys[23] = new byte[]{-30, 13, 21, -32, 57, 78, 14, -105, -127, -115, -37, 33, -52, 48, -90, 88};
      keys[24] = new byte[]{-74, -64, -89, 86, -11, -110, -83, 116, -93, 61, 100, 53, -68, -68, -124, -104};
      keys[25] = new byte[]{98, -92, -96, -44, -74, 13, 117, -83, 109, -6, -33, -76, 3, 127, 95, -45};
      keys[26] = new byte[]{-94, 106, 41, -114, -102, -72, 110, 67, 59, 34, 102, -97, -93, -121, -59, 51};
      keys[27] = new byte[]{-104, -56, -18, -92, 1, -71, -31, -57, -93, 117, -39, 99, 93, 0, -32, -126};
      keys[28] = new byte[]{124, -29, -103, -24, -17, 124, -28, 115, 62, 94, 100, 97, -4, 115, 27, -127};
      keys[29] = new byte[]{50, -7, -34, -97, 100, 90, 109, -15, -8, 16, -112, -83, 20, -73, 10, 78};
      keys[30] = new byte[]{116, 38, 72, -71, 99, -20, 103, -87, 119, 109, -7, -125, -98, -64, 114, -104};
      keys[31] = new byte[]{-85, 0, 86, 127, -23, -71, 94, -74, 126, 58, -114, 125, -61, -11, -59, -62};
      keys[32] = new byte[]{3, -12, -121, 47, 90, 64, 50, -49, 49, 58, -15, 61, 126, -47, -7, 10};
      keys[33] = new byte[]{44, 63, -58, 8, 1, -103, -95, -95, 85, -58, -13, 126, 24, 102, 61, -102};
      keys[34] = new byte[]{-42, -63, -86, 68, -48, 50, 4, 30, 87, 0, -28, 93, 104, 118, 90, 11};
      keys[35] = new byte[]{82, 6, -126, 112, 0, 80, 30, 70, 124, 85, 114, -116, 68, -24, -12, 67};
      keys[36] = new byte[]{0, 86, 89, -48, -19, -59, 102, -97, -74, 53, 11, -112, -37, 60, -109, -117};
      keys[37] = new byte[]{74, -54, 42, 78, -92, -28, 24, 97, 35, 18, 105, 52, 112, 72, -20, 85};
      keys[38] = new byte[]{-61, 120, 122, 28, 77, 42, 40, -59, 22, -3, -93, -40, 76, 101, 14, -100};
      keys[39] = new byte[]{-93, 64, -83, -116, -116, -111, -50, -103, -115, 34, 99, -8, 47, 35, 45, -104};
      keys[40] = new byte[]{-90, -24, 38, 67, 41, -51, -24, 21, -79, 33, 72, -9, 59, -39, -117, -122};
      keys[41] = new byte[]{119, -40, 110, -45, -38, -72, 110, -43, 47, 19, 37, 77, 111, -5, 12, 87};
      keys[42] = new byte[]{-20, 70, -34, -76, 31, 14, -18, 98, -118, -26, 37, -41, 20, 60, -101, -94};
      keys[43] = new byte[]{45, -26, 108, 104, -116, -100, -19, 78, 12, 47, -85, 35, -90, 124, 65, -43};
      keys[44] = new byte[]{-25, 70, -22, -20, 94, 33, -98, 28, -72, 1, 35, -55, 106, 91, -60, 39};
      keys[45] = new byte[]{-6, 110, -53, -74, -82, 66, -109, 114, -48, 78, -64, -38, 90, 21, -11, 4};
      keys[46] = new byte[]{77, -127, -84, 54, 67, 20, -27, 66, -86, 102, -24, 32, -50, 46, 112, 0};
      keys[47] = new byte[]{94, -69, -8, -59, 40, 92, -26, 50, -105, -121, 14, -126, -2, 117, -101, 82};
      keys[48] = new byte[]{-6, -106, 60, -56, 51, -66, -3, -94, -17, -17, -110, -99, 41, -100, 3, -113};
      keys[49] = new byte[]{18, 85, -123, 108, -55, 53, 122, -44, -3, -38, 47, 18, 0, -80, -56, 101};
      keys[50] = new byte[]{-69, 69, 4, 127, 122, 122, 27, 15, -116, 50, 77, 94, 124, 37, 70, 98};
      keys[51] = new byte[]{104, 27, 80, 122, 63, 65, 31, -24, 20, -58, -11, 110, -89, 1, 6, -85};
      keys[52] = new byte[]{-60, -121, 50, -84, -60, 115, -47, 1, -68, -42, -38, -109, 99, 118, 85, 59};
      keys[53] = new byte[]{78, -45, -62, -22, 98, -36, 32, 35, 56, -6, -91, 76, -34, 18, 93, 48};
      keys[54] = new byte[]{11, 113, -56, -123, -124, -93, -75, 38, 56, 29, -46, -120, 107, -51, -98, 54};
      keys[55] = new byte[]{-35, 66, -83, -73, -53, -93, 14, 100, -22, 17, -115, 50, 56, 14, -3, -54};
      keys[56] = new byte[]{22, -54, 68, 68, -101, 50, -68, 88, 10, -39, 96, 122, 65, -88, -68, -75};
      keys[57] = new byte[]{80, 28, 33, 64, 54, -78, 113, -1, -77, -118, -5, -111, 20, 21, 24, -53};
      keys[58] = new byte[]{13, 102, -118, 30, 88, 13, 69, -24, 15, -111, -75, -42, 80, -115, 25, 80};
      keys[59] = new byte[]{14, 42, 1, 99, -89, -108, 5, -23, 82, 8, 1, -58, 116, 41, 16, 103};
      keys[60] = new byte[]{91, -26, 78, 51, -57, 44, -27, 100, -2, -1, -28, -113, -38, 67, 117, -72};
      keys[61] = new byte[]{24, -101, -2, 69, 2, -97, -119, 59, -91, -94, 100, -93, 59, 110, 64, 127};
      keys[62] = new byte[]{-81, -33, 55, 50, 83, -124, 105, 64, 112, 18, -12, 59, -38, -115, 73, -125};
      keys[63] = new byte[]{-79, 72, -32, 1, 76, 114, -12, 123, -48, 116, 2, 119, 115, 31, -64, 54};
      keys[64] = new byte[]{-94, 1, -123, -95, 81, 107, 76, -123, 109, -85, -20, -101, 91, 109, -69, -97};
      keys[65] = new byte[]{-53, -29, 85, -25, 4, 7, -118, -94, -119, -91, 43, 36, 61, 80, -53, -94};
      keys[66] = new byte[]{75, -61, 106, -124, 90, -103, 78, 127, -2, 51, -53, 19, -98, 108, -34, 35};
      keys[67] = new byte[]{119, -54, -69, -87, 6, -91, -45, 8, 115, 28, 37, 0, -125, 20, 42, 91};
      keys[68] = new byte[]{-3, 106, -90, -29, 86, 110, 3, 18, 106, -62, 13, -76, 126, -17, -57, 65};
      keys[69] = new byte[]{-31, -59, 115, 62, -106, -25, -127, -118, 112, 125, 53, 111, 108, 65, 54, -127};
      keys[70] = new byte[]{48, 31, 107, -91, -49, -42, -27, 124, -97, 58, 15, 64, 68, -118, -32, 76};
      keys[71] = new byte[]{-86, -11, -46, 29, -80, -53, -71, 62, 84, -116, -43, -23, 100, 66, -86, 15};
      keys[72] = new byte[]{-12, 30, -110, -15, 55, -24, -63, -65, 13, -2, 74, -71, -47, -107, -72, 43};
      keys[73] = new byte[]{-33, -8, 105, -32, 116, 75, 109, 103, 110, 7, 1, -59, -119, 60, 7, -14};
      keys[74] = new byte[]{-22, 57, 103, 33, 47, -102, -73, 28, -53, 81, 4, -92, 103, 24, 19, 27};
      keys[75] = new byte[]{28, 43, 98, -108, -87, -120, 93, -61, -35, 9, -97, 55, 52, -68, -10, -66};
      keys[76] = new byte[]{114, -33, -29, -7, -30, 81, 118, -113, -99, 66, 125, -114, 127, 87, 102, 89};
      keys[77] = new byte[]{-54, 82, 83, 24, -118, 64, 110, 41, -85, 109, 4, 109, 74, -7, -65, 37};
      keys[78] = new byte[]{7, -34, 11, -105, 91, -13, 51, -5, -77, -75, -49, 105, -98, -26, 67, 5};
      keys[79] = new byte[]{-93, -77, 10, 38, -4, 8, -87, 49, 12, 62, 54, 102, 14, -13, -72, -49};
      keys[80] = new byte[]{-97, 75, -120, -106, -30, -43, 44, 97, 95, -98, -112, -93, 24, -10, -126, -62};
      keys[81] = new byte[]{-118, -11, 41, -114, 106, 123, -18, -51, -113, -124, -81, 86, 51, -128, 38, 3};
      keys[82] = new byte[]{35, 104, 80, 23, 65, -123, -93, -90, -23, -23, -115, -61, -110, 60, 9, 18};
      keys[83] = new byte[]{-51, -81, 127, -87, -15, 84, 126, 104, 74, 54, 85, 62, -121, 126, 90, 40};
      keys[84] = new byte[]{8, 74, -33, 89, -88, -108, 72, -98, 105, 42, -107, 78, 35, -75, 109, -103};
      keys[85] = new byte[]{67, 58, 19, -118, 99, 56, 30, 57, -69, 18, 10, -54, 6, 30, 77, -43};
      keys[86] = new byte[]{-39, -28, 89, 7, 121, 57, -79, -68, 69, -108, -86, -31, -15, -34, -10, -121};
      keys[87] = new byte[]{-107, -67, -32, 98, 81, 76, 29, -14, 23, 13, 64, -61, -69, 18, -123, -10};
      keys[88] = new byte[]{122, -3, 24, 123, -45, -100, 92, 50, 126, 36, 47, 0, -3, -23, -63, 15};
      keys[89] = new byte[]{-17, 72, -70, -6, -119, -92, 46, 46, 112, 86, 34, 7, 116, -96, 92, 110};
      keys[90] = new byte[]{-82, -65, 19, 94, -98, -56, -22, 59, -102, -88, -45, -14, 100, -127, 77, 103};
      keys[91] = new byte[]{58, -124, -68, 32, 89, 108, 28, -71, -75, -4, 94, 119, 30, -48, 42, -74};
      keys[92] = new byte[]{75, -45, -69, 61, -88, 75, -62, -4, 89, 53, 19, -15, 79, 112, 33, -62};
      keys[93] = new byte[]{10, 1, 106, -75, -98, -85, 72, -108, 85, -102, -63, -46, -111, 52, 115, 47};
      keys[94] = new byte[]{-18, 26, 69, -31, -101, -14, -30, 82, -29, 20, -41, 73, 17, -119, -19, 112};
      keys[95] = new byte[]{84, -10, 12, 85, -76, -3, -52, -53, -70, -9, 97, -116, -68, 86, 104, -33};
      keys[96] = new byte[]{-72, 1, 89, 20, 31, 0, -13, -86, -111, 63, -95, -93, -108, 92, 86, 25};
      keys[97] = new byte[]{65, 52, -39, -46, 64, -33, 104, -64, -56, 103, -48, 9, 14, -86, 7, -113};
      keys[98] = new byte[]{-113, -55, -9, -45, -110, 118, -93, 30, -60, 54, -43, -51, 126, -107, -41, -47};
      keys[99] = new byte[]{-17, -59, -47, -91, -40, 83, -62, 119, -48, -49, 5, 72, -36, 51, -29, -5};
      keys[100] = new byte[]{72, -120, 42, -100, 27, -110, 83, 75, 21, -62, -98, -3, 44, 105, -3, -1};
      keys[101] = new byte[]{-88, 61, -27, 127, 102, -31, 27, -61, 36, -108, 1, -4, 7, 103, -55, 72};
      keys[102] = new byte[]{-69, -35, 39, 80, 108, 79, 14, -41, 74, 59, 50, 1, -72, -8, 47, -18};
      keys[103] = new byte[]{88, 3, 10, -82, 48, -17, -13, -42, -51, 85, -39, -22, 112, 92, 38, -17};
      keys[104] = new byte[]{65, -119, 13, 43, -72, 109, 26, -73, -96, -58, -47, -106, -107, 127, -125, -30};
      keys[105] = new byte[]{101, 106, 71, 112, -37, -18, 115, 89, -127, -41, 94, 16, -28, 94, -98, 115};
      keys[106] = new byte[]{22, -45, 114, -66, -100, 111, 123, 119, -81, 19, 60, 102, 59, 83, 28, -97};
      keys[107] = new byte[]{46, 84, -62, -74, 22, 48, -27, -34, -34, -54, 18, -100, -36, -15, 97, -47};
      keys[108] = new byte[]{63, 6, 82, 76, 55, 75, 75, -56, -109, -32, 50, -14, -107, 34, 76, -40};
      keys[109] = new byte[]{-67, 9, 97, 24, -98, -125, -110, 98, 19, 15, -69, 10, -111, 101, 28, -9};
      keys[110] = new byte[]{27, -8, 38, 19, 85, 0, 6, 38, -55, 62, -49, 66, 76, -65, -40, 67};
      keys[111] = new byte[]{-96, 73, -22, 63, 53, 38, -56, -106, -119, 123, 91, -108, 50, -118, -58, 28};
      keys[112] = new byte[]{-26, -31, -124, -28, 25, 0, 31, -86, 124, 27, -39, 115, -30, -7, -16, -37};
      keys[113] = new byte[]{123, -71, -41, 108, -39, -12, 14, 122, 101, 34, -78, 126, -111, -82, -42, -33};
      keys[114] = new byte[]{26, -33, 8, 70, 100, 106, 78, 12, 69, 91, 123, 30, -20, 18, 10, 61};
      keys[115] = new byte[]{100, 118, 102, 48, 40, -55, -53, -54, -28, 32, -116, -93, -87, -126, -120, 107};
      keys[116] = new byte[]{37, -119, 117, -57, 48, 24, 20, -12, -98, -46, 15, 27, 2, 80, -11, 55};
      keys[117] = new byte[]{13, 19, -68, -6, 52, -9, 66, 6, -29, 45, 83, 88, 60, -52, -41, -77};
      keys[118] = new byte[]{-33, 91, -85, 70, -121, 91, -108, -21, -97, -42, 42, 79, 86, -105, -60, 1};
      keys[119] = new byte[]{-46, 108, -17, 38, -92, -64, -17, -3, 15, -93, -45, -72, 67, -90, -79, 108};
      keys[120] = new byte[]{71, -36, 101, 39, 121, -123, 85, -102, 54, 9, 85, 91, -58, -87, 28, -40};
      keys[121] = new byte[]{-57, -75, -54, -40, 108, -8, 112, 109, 110, -8, 48, -19, -106, 14, -7, 122};
      keys[122] = new byte[]{17, 89, 50, -88, -74, -89, 73, -122, -49, -57, -66, 0, 107, -106, -49, 82};
      keys[123] = new byte[]{99, -70, 14, -41, -71, -35, 125, 18, 26, 92, 32, -94, -102, -43, 127, 43};
      keys[124] = new byte[]{75, 60, 19, 49, 16, 10, -31, -66, 81, 65, -4, 103, -122, 59, -19, -46};
      keys[125] = new byte[]{-45, 115, -89, -35, 16, 127, -77, 101, 123, -39, 58, 7, -77, -83, 75, -72};
      keys[126] = new byte[]{60, 26, -101, 1, -32, -69, -84, -59, -23, 27, -75, -15, -78, 114, 63, 68};
      keys[127] = new byte[]{67, 102, 83, -92, 6, 102, -117, -112, 101, 44, -3, -118, 102, 37, 77, 75};
      keys[128] = new byte[]{124, -40, 68, 113, -72, 116, 109, 84, 59, 107, -54, -124, 81, 26, 54, -1};
      keys[129] = new byte[]{-104, -112, -96, 105, -6, -26, -56, -64, -89, -77, -114, 49, -1, 68, 63, -26};
      keys[130] = new byte[]{59, -98, 91, 74, -2, 51, -52, 12, 61, -112, -21, 55, -20, 122, 0, 34};
      keys[131] = new byte[]{-38, 90, -85, -109, -13, -68, -44, 57, -127, -94, -37, 72, -29, -109, -108, -26};
      keys[132] = new byte[]{-41, 50, -40, 90, 94, -104, 121, 26, 31, 18, -98, -10, -1, -43, 93, 32};
      keys[133] = new byte[]{2, 66, 68, -93, -54, 121, -50, -104, 73, 6, -94, 60, -58, -88, 104, 12};
      keys[134] = new byte[]{-29, -44, 57, 115, 75, -87, -17, -88, 5, 78, -15, -82, 92, 96, 77, 5};
      keys[135] = new byte[]{40, -85, -41, -4, -54, 81, 33, -39, 91, 61, -54, 44, 23, 101, 121, 106};
      keys[136] = new byte[]{-79, -123, -11, -90, -124, 9, -14, 65, 35, 22, -29, 86, -45, -69, 16, 104};
      keys[137] = new byte[]{85, 41, 49, 89, 109, 8, -81, 44, -120, -62, 67, -43, 76, -90, -75, -89};
      keys[138] = new byte[]{-32, -29, 77, -86, -74, -39, -63, -72, 53, 127, -76, 117, -63, 69, -45, 119};
      keys[139] = new byte[]{-126, -43, 49, 24, -99, 97, -36, 127, -51, -32, -63, 40, -120, 43, -112, -49};
      keys[140] = new byte[]{12, 77, 16, 1, 15, -108, 88, -19, -96, -41, 55, 111, -91, 53, 82, -6};
      keys[141] = new byte[]{-48, 33, 20, 6, 44, 97, 127, -14, -97, -25, 20, 84, -9, -96, 96, 73};
      keys[142] = new byte[]{49, 105, 117, 58, 67, 84, 90, -12, -121, 7, 75, 54, 19, 120, -70, 19};
      keys[143] = new byte[]{103, 12, -9, -68, -48, -116, 121, 91, 122, 26, 31, -1, -83, -85, 120, 72};
      keys[144] = new byte[]{46, 5, 14, -75, -99, 117, 95, 50, 121, -126, 50, 96, -33, -20, -128, -85};
      keys[145] = new byte[]{-106, 44, -48, -42, 118, -91, -21, -59, 85, -73, 84, -15, -10, -59, -111, -128};
      keys[146] = new byte[]{51, -124, 102, 25, -9, -15, -117, -18, -81, -61, 92, 84, 85, 5, 98, -9};
      keys[147] = new byte[]{-72, -103, 67, -72, -110, 126, 67, 53, -127, 118, 126, -116, 109, -34, -50, 86};
      keys[148] = new byte[]{27, 22, 96, 33, 122, -112, 28, 114, 56, 1, -36, -35, 113, 105, -105, -3};
      keys[149] = new byte[]{110, 11, 62, 104, -47, -104, -5, 111, -78, -123, -65, -44, 75, -60, -71, -90};
      keys[150] = new byte[]{23, -24, -26, 86, -88, 55, -124, -27, -51, -51, -105, -77, -42, -123, -59, 19};
      keys[151] = new byte[]{-1, 67, -90, 95, 69, 28, -78, 82, 47, -19, -36, 110, -4, -24, 8, -21};
      keys[152] = new byte[]{-32, -74, -60, -14, -122, 81, 78, 90, -66, -64, -47, 51, -11, 19, 46, -13};
      keys[153] = new byte[]{23, 75, 73, 53, 85, -80, -126, -77, -4, 73, 2, 79, -68, -91, 53, -36};
      keys[154] = new byte[]{98, 46, 115, -124, -120, -99, -54, -24, 53, 71, 108, -125, 106, 49, 3, 15};
      keys[155] = new byte[]{126, -84, 62, 82, 73, -55, 75, -113, 17, -12, 109, -9, -18, -75, -40, 8};
      keys[156] = new byte[]{3, 40, -60, -25, 85, -92, -117, -106, 44, -54, 15, 99, 10, 65, 124, 62};
      keys[157] = new byte[]{79, -8, 104, 119, -60, 43, -105, 16, -123, -14, -34, 90, -34, 81, 93, -90};
      keys[158] = new byte[]{107, -42, 15, 35, 47, 78, -6, -31, -46, 29, 41, 95, -13, -29, -18, 115};
      keys[159] = new byte[]{-43, -7, -94, -47, -115, 45, -33, 3, 110, 35, 111, 74, -82, -4, -42, 100};
      keys[160] = new byte[]{-114, -72, -81, 82, 12, -53, 78, -109, -37, 109, -91, 28, 58, -1, 14, -104};
      keys[161] = new byte[]{-56, -106, 65, 50, 108, -107, -91, -34, -9, -12, 20, 118, -79, -49, -62, -100};
      keys[162] = new byte[]{87, 112, 78, -80, -86, -114, 83, 117, -30, -81, 114, 111, 21, -9, -66, -21};
      keys[163] = new byte[]{-88, -109, -96, 7, -66, -78, -50, 14, 17, 87, -17, 86, 66, 1, 39, -5};
      keys[164] = new byte[]{33, -19, 14, 121, 27, -36, -41, -9, -112, 123, -70, -107, -38, -67, -58, 35};
      keys[165] = new byte[]{48, 92, -74, 50, -127, -7, 68, -72, 12, 51, 123, 117, -34, 3, -123, 102};
      keys[166] = new byte[]{32, -105, 7, -87, 121, -39, 36, -108, -103, 78, 119, -30, -107, 102, 40, -119};
      keys[167] = new byte[]{116, 9, 71, 90, -58, 22, -62, -101, 0, -103, -29, 83, 94, -5, 53, -41};
      keys[168] = new byte[]{106, 67, -56, 80, 63, 69, -69, 86, 85, -23, -73, -48, 116, -10, 20, 99};
      keys[169] = new byte[]{115, -8, 117, -38, -7, 104, -64, 25, 68, 98, 3, -25, 124, 66, -66, -83};
      keys[170] = new byte[]{-71, 69, -82, -70, 54, -48, -83, 43, -39, -64, -18, 13, 97, 19, 74, -106};
      keys[171] = new byte[]{46, -80, 22, -125, 122, 18, -117, 15, 114, -124, -33, 10, -85, 18, 114, 109};
      keys[172] = new byte[]{120, 7, 46, -1, -111, -115, -114, 75, 106, -82, 103, 106, -11, 108, -30, 115};
      keys[173] = new byte[]{41, 105, 95, -55, -18, -89, -64, -8, -70, 44, 104, 120, -3, 114, 68, 41};
      keys[174] = new byte[]{53, -128, -47, 56, 48, 105, -6, 6, -64, -41, 113, 96, 18, 77, -54, 8};
      keys[175] = new byte[]{1, 78, -4, 2, -114, 26, -118, 112, -10, 14, 52, 54, 18, 59, 92, 93};
      keys[176] = new byte[]{-5, 69, 116, -12, -93, -122, -67, -38, -125, -100, 52, -37, 43, 74, -106, -19};
      keys[177] = new byte[]{-23, -92, -102, 59, -63, -35, 76, -91, -110, -108, -83, -121, 106, -86, 62, -84};
      keys[178] = new byte[]{-97, 16, -126, 23, -60, 125, -71, -30, 108, 62, 24, 13, -57, 65, 126, -20};
      keys[179] = new byte[]{90, 60, 88, -3, -32, 82, -54, -56, 17, -103, -31, 91, 80, 69, 10, 16};
      keys[180] = new byte[]{-123, -69, -40, 31, -67, 76, 79, 27, 40, -37, -24, -67, 81, -128, -18, -64};
      keys[181] = new byte[]{120, -79, 8, -110, 58, 62, 70, -95, 39, 72, -19, 18, 57, 8, 61, 66};
      keys[182] = new byte[]{1, 93, -15, -79, -40, 90, 74, 114, 42, -112, -74, -32, 8, 49, 73, 37};
      keys[183] = new byte[]{126, 81, 74, -89, -90, 77, 10, -88, -84, -60, -38, -25, 79, 36, -59, -6};
      keys[184] = new byte[]{-67, -125, -19, 19, 108, 100, 22, -127, 108, -117, -8, 82, 20, -83, 72, -69};
      keys[185] = new byte[]{22, 13, 4, -49, -69, -36, 96, -39, -113, 28, 92, -28, -117, 10, -85, 3};
      keys[186] = new byte[]{98, 97, -14, 16, 102, 70, 98, 20, -24, 95, -118, -116, -36, -61, -85, -82};
      keys[187] = new byte[]{16, -128, 46, -27, 17, -80, 37, 15, 20, -12, 112, -42, 119, 78, 75, -6};
      keys[188] = new byte[]{-20, -20, -75, -78, -126, -36, -40, -30, 56, 46, -107, 72, -126, 108, -79, 111};
      keys[189] = new byte[]{92, 1, 61, 36, 12, -118, 40, 107, 28, -49, 124, 116, 75, 65, 9, -67};
      keys[190] = new byte[]{7, -57, 92, 60, -92, -68, -79, 71, 13, -51, 118, 126, -92, -109, 97, 102};
      keys[191] = new byte[]{13, 109, -66, -36, 1, 3, 33, -66, -46, -65, 105, 88, -91, -126, 114, 67};
      keys[192] = new byte[]{-127, 52, -25, -72, 32, 32, 37, 125, 53, 12, -41, -45, 119, 110, -80, 88};
      keys[193] = new byte[]{-47, 90, -15, 123, -71, -65, -62, -45, 93, 88, -112, -112, -3, -73, 118, -4};
      keys[194] = new byte[]{23, 115, 3, -31, 117, -92, 113, 125, -77, -83, 8, 109, -5, 45, 45, 30};
      keys[195] = new byte[]{-84, -99, 94, 52, -63, -75, -65, 125, -22, 57, 23, -50, 11, 84, -86, -128};
      keys[196] = new byte[]{-66, -38, 1, 94, 93, 15, 6, -61, 65, -7, -85, -23, 17, 39, -78, -44};
      keys[197] = new byte[]{-126, -126, 8, 52, -113, 109, 14, 4, 56, -61, -16, -83, -126, 54, -71, 102};
      keys[198] = new byte[]{-93, -124, 85, 18, -53, 48, 114, -116, 93, -2, 13, -27, 45, 46, 49, 9};
      keys[199] = new byte[]{-115, 41, 93, 58, -68, -90, 81, 43, -68, -121, -20, -76, 71, 74, 38, -77};
      keys[200] = new byte[]{-5, -4, 52, 1, -69, 120, 7, 119, 108, -101, 103, 94, -46, 89, 76, 59};
      keys[201] = new byte[]{55, -109, -97, 72, -78, 7, -7, 14, -76, -83, 127, -54, 75, -12, 68, -11};
      keys[202] = new byte[]{-39, 83, -20, -78, -37, -76, -115, -46, -99, -74, 65, -96, -6, 22, 51, -120};
      keys[203] = new byte[]{-65, -124, -97, 10, 115, 113, -124, -113, 112, 120, 78, 98, 106, 56, 31, 107};
      keys[204] = new byte[]{-109, 89, -89, -89, 59, 105, -66, -41, -125, 1, 79, 32, 13, 14, 26, 124};
      keys[205] = new byte[]{18, -60, 64, 16, -65, -57, -112, -84, -11, 81, 126, 45, 43, 125, -100, 122};
      keys[206] = new byte[]{44, 27, -117, 85, -115, -80, 33, -56, 105, -116, 89, 117, -27, 36, -30, -108};
      keys[207] = new byte[]{-106, -116, 63, -4, 39, 125, 66, 30, 47, 61, 55, -1, 10, 45, 28, -81};
      keys[208] = new byte[]{-31, -58, -93, 43, -75, 36, 121, -106, -24, 108, 21, 119, -114, 78, 55, 47};
      keys[209] = new byte[]{-16, 120, 95, -41, 44, -9, 98, -47, -115, 11, -6, 92, -68, -63, 101, 95};
      keys[210] = new byte[]{-124, -41, 102, -73, 82, -96, 61, -21, -47, 54, 97, -21, 25, 106, -79, -3};
      keys[211] = new byte[]{-24, 82, 32, 41, 72, 25, 98, -36, -70, 67, -115, -43, -42, 65, 32, -110};
      keys[212] = new byte[]{-99, 33, 98, -29, -4, 22, 17, 80, 109, 61, -41, 112, 22, 96, -96, 4};
      keys[213] = new byte[]{93, 20, 8, 97, 60, 123, 58, 31, 37, 113, -75, 71, -70, 90, -3, -118};
      keys[214] = new byte[]{37, 78, -125, -104, 35, 124, 124, -85, -120, 125, -106, 83, -52, -49, 96, -122};
      keys[215] = new byte[]{-112, 42, -40, 100, -75, -42, -98, 56, -114, 29, 29, 71, -48, -75, -38, -58};
      keys[216] = new byte[]{16, 88, -123, -89, 106, -65, 7, 51, -25, 17, -112, -106, 112, -35, 67, 87};
      keys[217] = new byte[]{-43, -77, 39, -48, 74, 36, -50, -90, -100, 95, 37, -98, -124, -82, -9, -21};
      keys[218] = new byte[]{122, 79, 4, 81, 41, -48, -28, -57, -4, -126, 2, -11, 5, 107, -63, 62};
      keys[219] = new byte[]{103, 90, -46, 112, 9, 104, -50, 5, 83, -10, -46, -97, -30, -44, 12, -111};
      keys[220] = new byte[]{-115, 66, 23, 23, -76, 93, -36, 57, 37, -15, 114, -80, -88, -54, 22, 81};
      keys[221] = new byte[]{48, 106, -66, -14, 63, 98, 59, -41, 33, -74, -78, -70, 21, -90, 116, 93};
      keys[222] = new byte[]{50, 56, 33, -109, -3, 98, -91, 55, 17, -70, -54, 8, -55, -6, -99, 18};
      keys[223] = new byte[]{18, 101, 40, -33, -5, 34, 118, -115, 85, -107, 73, 123, 53, 108, -83, 107};
      keys[224] = new byte[]{-122, 32, -89, 62, 34, -101, 115, -7, 11, 106, -76, -54, 107, 49, 18, 50};
      keys[225] = new byte[]{60, 30, 49, 74, -61, 112, -61, 59, -16, -110, 118, 122, 20, 72, -44, -90};
      keys[226] = new byte[]{-22, 116, 12, 6, -75, -25, -80, -123, -39, -16, 7, 23, -16, -122, -46, -36};
      keys[227] = new byte[]{115, 61, 53, 51, -124, -80, 66, 126, 22, 1, 100, -84, -104, 17, -125, 27};
      keys[228] = new byte[]{-11, -46, 77, 52, -97, 16, 29, 126, 13, -11, -6, -2, -44, 35, -12, -102};
      keys[229] = new byte[]{9, 95, 9, -114, -5, -114, -68, 80, 74, 53, -114, 93, 25, 41, 87, -25};
      keys[230] = new byte[]{-11, -121, 91, -95, -113, 32, -74, 55, -7, -59, -64, 69, -23, -2, -105, 100};
      keys[231] = new byte[]{-50, 76, -51, -86, -39, 120, 28, 56, 82, -17, -107, 74, 26, -70, 4, 75};
      keys[232] = new byte[]{118, 89, 42, -87, 39, -71, -53, -22, 73, -110, 13, 8, -2, -80, -128, 0};
      keys[233] = new byte[]{35, -52, 67, -59, 9, -110, -78, 123, 99, -21, -4, 18, -61, -45, -72, -104};
      keys[234] = new byte[]{-8, -121, -99, 54, 93, -123, -106, 86, -76, -74, -33, -41, -76, 88, -119, 23};
      keys[235] = new byte[]{-107, 65, -21, 78, -84, -36, -118, 26, -62, 48, -93, -78, 60, -35, -70, -81};
      keys[236] = new byte[]{32, -44, 82, -51, -59, 105, 6, -79, 35, 73, -39, -52, -27, 103, 40, 113};
      keys[237] = new byte[]{26, -117, -54, -107, -29, 0, -86, 29, 25, 2, -114, 50, 92, 82, 91, 23};
      keys[238] = new byte[]{94, 67, -70, 60, -104, -8, -115, -14, 54, -71, -15, 75, -127, -76, 77, -77};
      keys[239] = new byte[]{54, 67, -40, 91, 56, 19, -121, 123, 98, -44, 17, 102, 33, -54, 81, 15};
      keys[240] = new byte[]{44, -23, -49, -116, 12, 1, 65, -71, 32, -59, -44, -128, 116, -60, -108, -17};
      keys[241] = new byte[]{-74, -19, -34, 0, 6, 8, -74, -50, -51, 28, -78, -44, 85, -4, -32, -41};
      keys[242] = new byte[]{36, 108, -100, 50, 126, -73, -102, -93, 70, -19, 41, 75, 53, -111, -108, 81};
      keys[243] = new byte[]{41, -121, 18, 100, -122, -68, -107, -64, 1, 27, -128, -5, -54, -58, -10, -113};
      keys[244] = new byte[]{-101, 110, 54, -5, -71, -100, 35, 98, -123, -64, 85, -52, -38, -112, -112, -13};
      keys[245] = new byte[]{116, -93, -114, -58, 46, 114, -73, 79, 14, -61, -69, 63, 35, -119, -13, -87};
      keys[246] = new byte[]{14, -35, 42, -108, 98, 67, 60, -3, -45, 49, 15, 3, 55, -101, -19, 60};
      keys[247] = new byte[]{-108, 38, -90, -6, 76, 96, -57, -24, -120, 111, 13, -111, -83, -24, -26, -11};
      keys[248] = new byte[]{-41, 74, -93, -16, -106, 62, -26, -107, 32, 0, -54, -35, -37, -84, -2, 116};
      keys[249] = new byte[]{84, -9, 87, -111, 31, -127, 82, -120, 73, -55, 70, 59, -99, 26, 97, 12};
      keys[250] = new byte[]{-124, 90, -114, 35, -25, -19, -128, -12, 74, 32, 110, 94, 55, 116, 127, 47};
      keys[251] = new byte[]{109, 120, 102, -102, 16, -17, -108, -58, -26, -91, -51, -119, 78, -4, 57, 70};
      keys[252] = new byte[]{55, 111, 112, 89, -15, -6, -52, 78, 3, 10, -89, 41, -122, -126, 30, 107};
      keys[253] = new byte[]{69, -25, 123, 5, 27, 95, -99, -51, -18, -39, 37, -2, -81, 87, 43, -8};
      keys[254] = new byte[]{24, 127, 17, 57, -97, -75, 75, -43, -94, -73, -40, 62, 65, -111, 90, -44};
      keys[255] = new byte[]{-2, 80, -61, -9, -9, 75, -90, -56, 58, 73, -64, 95, 28, 86, 11, -51};
      keys[256] = new byte[]{-96, 7, 72, -65, -69, 74, -100, -76, -101, -116, 73, -14, 113, 41, -106, 18};
      keys[257] = new byte[]{97, -21, -113, 124, -64, -33, 4, 16, 49, -94, -113, -67, 25, 108, 47, 57};
      keys[258] = new byte[]{-124, -89, -77, 7, 80, 10, -123, -85, 112, 77, 35, 124, -93, -40, 111, 37};
      keys[259] = new byte[]{-16, 123, -93, 83, 69, -39, -14, -82, 94, -67, 3, 8, 88, 75, 76, -51};
      keys[260] = new byte[]{27, -22, -57, -35, 59, 33, 53, 72, -38, 111, 70, -36, 24, -19, -123, 90};
      keys[261] = new byte[]{125, -114, 92, -72, -89, 112, 88, 55, 121, -35, 44, -40, 29, 13, -69, -77};
      keys[262] = new byte[]{-92, -63, -45, -95, -35, -17, 122, -73, 90, -68, -12, -118, -94, -102, 126, 116};
      keys[263] = new byte[]{-10, 79, -87, 80, -124, 116, -124, -75, -32, 122, 23, -116, -81, -80, 20, -87};
      keys[264] = new byte[]{-117, -21, 2, -31, -123, -125, 112, -89, 86, 54, 1, 60, 110, -109, 75, 15};
      keys[265] = new byte[]{-16, 38, 74, -3, -111, -26, -92, -35, -107, 25, 60, -91, 17, -23, -85, -82};
      keys[266] = new byte[]{-66, 57, 14, 32, -37, -117, 3, 109, -76, -37, -128, 70, 92, 124, -88, 81};
      keys[267] = new byte[]{-70, 47, -1, 45, 85, 86, 12, 110, 18, -41, 86, -22, -24, -44, 122, -106};
      keys[268] = new byte[]{-62, -14, 53, -119, -34, -72, 93, 93, 81, -89, 58, -40, -104, 74, 96, -34};
      keys[269] = new byte[]{23, -30, 54, -118, 114, 43, -44, 69, -69, 91, -1, -10, 97, -62, 5, -126};
      keys[270] = new byte[]{108, -123, 32, -8, -9, -25, -23, -74, -109, 104, 89, 104, -99, -82, -90, 78};
      keys[271] = new byte[]{98, -79, -43, 127, 57, -111, 58, 79, -94, 51, 51, 33, 25, 10, -12, 120};
      keys[272] = new byte[]{42, 60, -72, 85, -30, 95, -97, -120, -68, 85, 88, 33, 68, 58, 119, -20};
      keys[273] = new byte[]{-47, -66, -77, -59, -49, -63, -32, -19, -69, -78, 102, -82, 108, 73, -91, -49};
      keys[274] = new byte[]{19, -19, 7, -5, 67, -68, 60, -76, 21, 94, 95, 50, -95, 16, 118, 72};
      keys[275] = new byte[]{48, -91, 19, 111, -72, 31, 101, 59, 12, 94, -18, 10, 114, 108, 71, 25};
      keys[276] = new byte[]{75, -51, -66, 32, 15, 49, 51, 103, 63, 36, 114, -97, 37, 124, -120, 96};
      keys[277] = new byte[]{86, 18, -116, 41, -33, -67, -92, -31, -127, -101, -89, 104, -6, 78, 2, 124};
      keys[278] = new byte[]{9, 5, 17, -31, -67, 32, -2, -71, 47, 25, -48, 28, -38, 102, -15, 101};
      keys[279] = new byte[]{91, -92, 24, -78, 109, 32, -127, 4, -97, 64, -61, -16, 103, 79, -66, -54};
      keys[280] = new byte[]{19, 56, -115, -76, -121, -61, 10, 1, 123, -55, 102, -52, 91, -109, -14, -81};
      keys[281] = new byte[]{-103, 72, 8, 62, -11, -57, -64, -2, -106, -5, -103, 0, -13, 56, -9, -101};
      keys[282] = new byte[]{-81, 37, -111, 119, 89, 8, 65, 2, 107, 94, 89, -99, -59, -25, -6, -60};
      keys[283] = new byte[]{-79, 72, -113, -20, 45, -127, -49, 10, -22, -41, -100, 90, 59, 10, -81, -7};
      keys[284] = new byte[]{5, -118, -47, -105, 119, 112, 123, -64, -98, -98, -28, -123, 46, -18, -71, 79};
      keys[285] = new byte[]{99, -85, 108, 86, -19, -54, 87, 30, -32, -40, -122, 30, -13, 8, 14, -56};
      keys[286] = new byte[]{33, -118, 45, 89, 24, 46, -118, -87, -100, 20, 95, -57, 31, -24, -83, 85};
      keys[287] = new byte[]{-42, -110, -116, 9, -51, -106, 77, -36, 22, -80, 1, -100, -115, 104, 52, -50};
      keys[288] = new byte[]{86, 31, -123, -89, 54, -80, 0, 87, 106, 110, 5, -12, -109, -34, 28, -78};
      keys[289] = new byte[]{85, 9, -26, 16, 111, -92, 116, -56, -80, -124, -124, -90, -109, 127, 26, 50};
      keys[290] = new byte[]{-128, 108, 49, -101, -60, 7, 0, 85, -30, -116, 15, -91, -118, -101, -68, -65};
      keys[291] = new byte[]{-120, 16, -125, -27, -86, 5, -102, 93, -122, 92, -74, -18, 24, 61, 4, 10};
      keys[292] = new byte[]{115, 34, -6, -24, 75, 49, 42, -124, -125, -82, 75, -89, 84, -75, -106, 96};
      keys[293] = new byte[]{-32, 86, 4, 47, 3, 46, -76, -72, -88, 5, -47, 73, -10, -63, 20, -64};
      keys[294] = new byte[]{18, 49, 19, 8, 27, -4, 116, 100, 62, 7, -22, 121, -16, -91, -56, -100};
      keys[295] = new byte[]{-91, -122, -38, 102, 49, -97, -119, -42, 85, 25, 127, 38, -108, -121, -39, -50};
      keys[296] = new byte[]{69, -57, 19, 96, -36, -122, 55, 124, 120, -72, -127, -80, -71, 27, -122, 80};
      keys[297] = new byte[]{-120, -49, -80, -95, -78, 90, 6, -56, 82, -120, 88, 111, -127, -14, -49, -121};
      keys[298] = new byte[]{113, 124, -118, -48, -102, 46, 107, -29, 58, 37, -33, 47, 20, 35, -12, -89};
      keys[299] = new byte[]{51, -3, -105, 21, 27, -78, -79, 48, 1, 89, 112, 46, 126, 32, -11, -83};
      keys[300] = new byte[]{-100, 20, -19, -123, 54, -101, -106, 19, -86, 80, -82, -120, -66, 119, 111, 117};
      keys[301] = new byte[]{-85, -67, 106, 113, 108, -72, -124, -80, -76, -97, -26, -118, -32, 79, -89, 122};
      keys[302] = new byte[]{39, -45, -17, 62, -93, 8, -2, 30, 23, -60, -25, -92, 71, 86, -15, 0};
      keys[303] = new byte[]{116, 10, 15, -54, -116, 53, 37, 64, -52, -2, -111, -38, -49, -3, 108, 50};
      keys[304] = new byte[]{81, 27, 77, 66, -74, 12, 65, 68, -25, -103, -118, 64, -13, 45, 113, 103};
      keys[305] = new byte[]{13, -61, -125, 124, 91, -24, 95, 93, 29, -26, 99, 44, -83, 91, -16, -69};
      keys[306] = new byte[]{49, -61, -56, 64, -120, 54, 59, 46, 119, -46, 32, -103, 123, 48, 93, 48};
      keys[307] = new byte[]{-73, 101, 99, 112, -94, -79, -125, -72, 80, -74, -63, 105, 1, -68, -85, 0};
      keys[308] = new byte[]{-104, -52, -115, -42, 121, 24, -51, 20, -112, -56, -124, 44, -11, 56, -41, 61};
      keys[309] = new byte[]{15, 66, -13, -17, 3, -40, 19, -28, 125, -123, -124, -70, -40, 24, -51, 43};
      keys[310] = new byte[]{-33, 42, -93, 76, 11, -67, -57, -5, 56, -84, -119, 61, -73, -51, 76, -37};
      keys[311] = new byte[]{-36, 42, 122, -127, 40, -101, -92, -111, -20, -5, 119, -109, 90, 50, 87, 91};
      keys[312] = new byte[]{105, -35, 65, 76, 77, -104, 17, 93, -47, -2, 103, 32, 48, -69, 81, -69};


      String imageName = "1024X1024.jpg";
      byte[] imageVector = getImageVectorForImageName(imageName);

      int keySize = 128;
      int numberOfKeys = 313;
      byte[] expectedKeys = flatten(keys);

      int numberOfThreads = 1;
      byte[] resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));


      numberOfThreads = 2;
      resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));

      numberOfThreads = 10;
      resultKeys = KeystreamGenerator.generateKeystream(Arrays.copyOf(imageVector, imageVector.length), keySize, numberOfKeys, numberOfThreads);
      assertTrue(Arrays.equals(expectedKeys, resultKeys));
   }

   private byte[] flatten(byte[][] bytes2D) {
      byte[] result = new byte[bytes2D.length * bytes2D[0].length];
      for (int i = 0; i < bytes2D.length; i++) {
         System.arraycopy(bytes2D[i], 0, result, i * bytes2D[i].length, bytes2D[i].length);
      }
      return result;
   }

   private byte[] getImageVectorForImageName(String imageName) throws Exception {
      final URL imageLocation = ImageLocator.getURLForImage(imageName);
      final BufferedImage image = ImageIO.read(imageLocation);
      return ImageVectorBuilder.getImageVector(image, 3);
   }
}
